for (i in 2:100){
f <- max(c(1,(i-SItrunc)))
I0[,i] <- param[1:N_l]*eigenMapMatMult(I0[,f:i],ws[((SItrunc+1)-(i-f)):(SItrunc+1)])
}
View(I0)
View(I1)
library(ebolaproj)
library(ebolaproj)
library(ebolaproj)
library(ebolaproj)
library(ebolaproj)
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
si_std  = CV_SI * mean_SI,
SItrunc = 40)
# final number of MCMC iterations (the whole thing,
# here with 10 locations runs in ~3.5mins) )
rep <- 2e2
sigma_prop <- rep(0.1,N_geo*2)         # initi
mu0 <- 10*SI$SItrunc
n_l=1
n_L=1
N_l=1
param<-c(mu0,1)
mu0
I0 <- matrix(0,N_l,100)
I0[,1] <- param[(N_l+1):(2*N_l)] #/ (1-param[(1):(N_l)])
for (i in 2:100){
f <- max(c(1,(i-SItrunc)))
I0[,i] <- param[1:N_l]*(I0[,f:i]%*%ws[((SItrunc+1)-(i-f)):(SItrunc+1)])
# I0[,i] <- param[1:N_l]*eigenMapMatMult(I0[,f:i],ws[((SItrunc+1)-(i-f)):(SItrunc+1)])
}
View(I0)
param<-c(1,mu0)
I0 <- matrix(0,N_l,100)
I0[,1] <- param[(N_l+1):(2*N_l)] #/ (1-param[(1):(N_l)])
for (i in 2:100){
f <- max(c(1,(i-SItrunc)))
I0[,i] <- param[1:N_l]*(I0[,f:i]%*%ws[((SItrunc+1)-(i-f)):(SItrunc+1)])
# I0[,i] <- param[1:N_l]*eigenMapMatMult(I0[,f:i],ws[((SItrunc+1)-(i-f)):(SItrunc+1)])
}
plot(I0)
plot(as.vectorI0)
plot(as.vector(I0))
ws
SItrunc
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
si_std  = CV_SI * mean_SI,
SItrunc = 40)
ws = rev(SI$dist)
SItrunc = SI$SItrunc
I0 <- matrix(0,N_l,100)
I0[,1] <- param[(N_l+1):(2*N_l)] #/ (1-param[(1):(N_l)])
for (i in 2:100){
f <- max(c(1,(i-SItrunc)))
I0[,i] <- param[1:N_l]*(I0[,f:i]%*%ws[((SItrunc+1)-(i-f)):(SItrunc+1)])
# I0[,i] <- param[1:N_l]*eigenMapMatMult(I0[,f:i],ws[((SItrunc+1)-(i-f)):(SItrunc+1)])
}
View(I0)
mu0
param
param <- c(1,10)
I0 <- matrix(0,N_l,100)
I0[,1] <- param[(N_l+1):(2*N_l)] #/ (1-param[(1):(N_l)])
for (i in 2:100){
f <- max(c(1,(i-SItrunc)))
I0[,i] <- param[1:N_l]*(I0[,f:i]%*%ws[((SItrunc+1)-(i-f)):(SItrunc+1)])
# I0[,i] <- param[1:N_l]*eigenMapMatMult(I0[,f:i],ws[((SItrunc+1)-(i-f)):(SItrunc+1)])
}
param[1:N_l]
ws
sum(ws)
plot(as.numeric(I0))
1/.74
mean_SI
1/I0
mu0
mean_SI
mean_SI
mean_SI
mean_SI
ws
SI
mu
para
param
param = c(1,10*mean_SI)
param
I0 <- matrix(0,N_l,100)
I0[,1] <- param[(N_l+1):(2*N_l)] #/ (1-param[(1):(N_l)])
for (i in 2:100){
f <- max(c(1,(i-SItrunc)))
I0[,i] <- param[1:N_l]*(I0[,f:i]%*%ws[((SItrunc+1)-(i-f)):(SItrunc+1)])
# I0[,i] <- param[1:N_l]*eigenMapMatMult(I0[,f:i],ws[((SItrunc+1)-(i-f)):(SItrunc+1)])
}
plot(as.numeric(I0))
I0
library(ebolaproj)
setwd("~/GitHub/projection")
Rcpp.package.skeleton("mypackage")
library(Rcpp)
Rcpp.package.skeleton("mypackage")
library(ebolaproj)
getwd()
getwd()
getwd()
library(ebolaproj)
exp(-1)
library(ebolaproj)
library(ebolaproj)
library(ebolaproj)
library(ebolaproj)
library(ebolaproj)
library(ebolaproj)
library(ebolaproj)
100/3
3/100
3/100*5e4
3/100*5e4/60
3/100*1e4/60
library(ebolaproj)
library(ebolaproj)
library(ebolaproj)
## Data from here:
## https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide
# source("project.R")
ts <- read.csv("RData/COVID-19-geographic-disbtribution-worldwide-2020-03-17.csv", stringsAsFactors=F)
ts$DateRep <- as.Date(ts$DateRep,format = '%d/%m/%Y')
country <- sort(as.character(unique(ts$Countries.and.territories)))
time_frame <- range(ts$DateRep)
n_days <- diff(time_frame) +1
I <- as.data.frame(matrix(NA,n_days,length(country)+1))
names(I) <- c('dates',country)
I[,1] <- seq(time_frame[1],time_frame[2],1)
for (i in 1:length(country)){
f <- which(ts$Countries.and.territories %in% country[i])
temp <- ts[f,]
for (j in 1:nrow(temp)){
f <- which( I$dates %in% temp$DateRep[j])
if(length(f)>1){
print('warning')
break
}
if(length(f)==1){
I[f,i+1] <- temp$Cases[j]
}
}
}
I[is.na(I)] <- 0
I_full <- I
View(I_full)
date_week_finishing <-  as.Date('08/03/2020',format = '%d/%m/%Y')
f<- which(I_full$dates <= date_week_finishing)
I_full <- I_full[f,]
View(I_full)
Threshold_criterion <- 100
d_limit <- date_week_finishing -30
f <- which(I_full$dates >= d_limit)
I_full$dates[f[1]]
d_limit <- date_week_finishing - 4*7
d_limit
Threshold_criterion <- 100
d_limit <- date_week_finishing - 4*7+1
f <- which(I_full$dates >= d_limit)
I_full$dates[f[1]]
Cum_I_march_onward <- colSums(I_full[f,-1])
f <- which(Cum_I_march_onward >= 100)
I_active_transmission <- I_full[,c(1,f+1)]
Cum_I_last_4weeks <- colSums(I_full[f,-1])
f <- which(Cum_I_march_onward >= 100)
I_active_transmission <- I_full[,c(1,f+1)]
Threshold_criterion <- 100
d_limit <- date_week_finishing - 4*7+1
f <- which(I_full$dates >= d_limit)
I_full$dates[f[1]]
Cum_I_last_4weeks <- colSums(I_full[f,-1])
f <- which(Cum_I_march_onward >= 100)
I_active_transmission <- I_full[,c(1,f+1)]
data <- list(date_week_finishing = date_week_finishing,
date_criterion = d_limit,
Threshold_criterion = Threshold_criterion,
I_active_transmission = I_active_transmission,
Country = colnames(I_active_transmission)[-1])
saveRDS(data, file = 'RData/data_08_03.rds')
library(knitr)
require(png)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), fig.width=8, fig.height=8, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
## Data from here:
## https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide
# source("project.R")
ts <- read.csv("RData/COVID-19-geographic-disbtribution-worldwide-2020-03-17.csv", stringsAsFactors=F)
ts$DateRep <- as.Date(ts$DateRep,format = '%d/%m/%Y')
country <- sort(as.character(unique(ts$Countries.and.territories)))
time_frame <- range(ts$DateRep)
n_days <- diff(time_frame) +1
I <- as.data.frame(matrix(NA,n_days,length(country)+1))
names(I) <- c('dates',country)
I[,1] <- seq(time_frame[1],time_frame[2],1)
for (i in 1:length(country)){
f <- which(ts$Countries.and.territories %in% country[i])
temp <- ts[f,]
for (j in 1:nrow(temp)){
f <- which( I$dates %in% temp$DateRep[j])
if(length(f)>1){
print('warning')
break
}
if(length(f)==1){
I[f,i+1] <- temp$Cases[j]
}
}
}
I[is.na(I)] <- 0
I_full <- I
date_week_finishing <-  as.Date('15/03/2020',format = '%d/%m/%Y')
f<- which(I_full$dates <= date_week_finishing)
I_full <- I_full[f,]
Threshold_criterion <- 100
d_limit <- date_week_finishing - 4*7+1
f <- which(I_full$dates >= d_limit)
I_full$dates[f[1]]
Cum_I_last_4weeks <- colSums(I_full[f,-1])
f <- which(Cum_I_march_onward >= 100)
I_active_transmission <- I_full[,c(1,f+1)]
View(I_active_transmission)
library(knitr)
require(png)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), fig.width=8, fig.height=8, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
## Data from here:
## https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide
# source("project.R")
ts <- read.csv("RData/COVID-19-geographic-disbtribution-worldwide-2020-03-17.csv", stringsAsFactors=F)
ts$DateRep <- as.Date(ts$DateRep,format = '%d/%m/%Y')
country <- sort(as.character(unique(ts$Countries.and.territories)))
time_frame <- range(ts$DateRep)
n_days <- diff(time_frame) +1
I <- as.data.frame(matrix(NA,n_days,length(country)+1))
names(I) <- c('dates',country)
I[,1] <- seq(time_frame[1],time_frame[2],1)
for (i in 1:length(country)){
f <- which(ts$Countries.and.territories %in% country[i])
temp <- ts[f,]
for (j in 1:nrow(temp)){
f <- which( I$dates %in% temp$DateRep[j])
if(length(f)>1){
print('warning')
break
}
if(length(f)==1){
I[f,i+1] <- temp$Cases[j]
}
}
}
I[is.na(I)] <- 0
I_full <- I
date_week_finishing <-  as.Date('15/03/2020',format = '%d/%m/%Y')
f<- which(I_full$dates <= date_week_finishing)
I_full <- I_full[f,]
Threshold_criterion <- 100
d_limit <- date_week_finishing - 4*7+1
f <- which(I_full$dates >= d_limit)
I_full$dates[f[1]]
Cum_I_last_4weeks <- colSums(I_full[f,-1])
f <- which(Cum_I_march_onward >= 100)
library(knitr)
require(png)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), fig.width=8, fig.height=8, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
## Data from here:
## https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide
# source("project.R")
ts <- read.csv("RData/COVID-19-geographic-disbtribution-worldwide-2020-03-17.csv", stringsAsFactors=F)
ts$DateRep <- as.Date(ts$DateRep,format = '%d/%m/%Y')
country <- sort(as.character(unique(ts$Countries.and.territories)))
time_frame <- range(ts$DateRep)
n_days <- diff(time_frame) +1
I <- as.data.frame(matrix(NA,n_days,length(country)+1))
names(I) <- c('dates',country)
I[,1] <- seq(time_frame[1],time_frame[2],1)
for (i in 1:length(country)){
f <- which(ts$Countries.and.territories %in% country[i])
temp <- ts[f,]
for (j in 1:nrow(temp)){
f <- which( I$dates %in% temp$DateRep[j])
if(length(f)>1){
print('warning')
break
}
if(length(f)==1){
I[f,i+1] <- temp$Cases[j]
}
}
}
I[is.na(I)] <- 0
I_full <- I
date_week_finishing <-  as.Date('08/03/2020',format = '%d/%m/%Y')
f<- which(I_full$dates <= date_week_finishing)
I_full <- I_full[f,]
library(knitr)
require(png)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), fig.width=8, fig.height=8, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
## Data from here:
## https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide
# source("project.R")
ts <- read.csv("RData/COVID-19-geographic-disbtribution-worldwide-2020-03-17.csv", stringsAsFactors=F)
ts$DateRep <- as.Date(ts$DateRep,format = '%d/%m/%Y')
country <- sort(as.character(unique(ts$Countries.and.territories)))
time_frame <- range(ts$DateRep)
n_days <- diff(time_frame) +1
I <- as.data.frame(matrix(NA,n_days,length(country)+1))
names(I) <- c('dates',country)
I[,1] <- seq(time_frame[1],time_frame[2],1)
for (i in 1:length(country)){
f <- which(ts$Countries.and.territories %in% country[i])
temp <- ts[f,]
for (j in 1:nrow(temp)){
f <- which( I$dates %in% temp$DateRep[j])
if(length(f)>1){
print('warning')
break
}
if(length(f)==1){
I[f,i+1] <- temp$Cases[j]
}
}
}
I[is.na(I)] <- 0
I_full <- I
date_week_finishing <-  as.Date('08/03/2020',format = '%d/%m/%Y')
f<- which(I_full$dates <= date_week_finishing)
I_full <- I_full[f,]
Threshold_criterion <- 100
d_limit <- date_week_finishing - 4*7+1
f <- which(I_full$dates >= d_limit)
I_full$dates[f[1]]
Cum_I_last_4weeks <- colSums(I_full[f,-1])
f <- which(Cum_I_last_4weeks >= 100)
Threshold_criterion <- 100
d_limit <- date_week_finishing - 4*7+1
f <- which(I_full$dates >= d_limit)
I_full$dates[f[1]]
Cum_I_last_4weeks <- colSums(I_full[f,-1])
f <- which(Cum_I_last_4weeks >= 100)
I_active_transmission <- I_full[,c(1,f+1)]
data <- list(date_week_finishing = date_week_finishing,
date_criterion = d_limit,
Threshold_criterion = Threshold_criterion,
I_active_transmission = I_active_transmission,
Country = colnames(I_active_transmission)[-1])
saveRDS(data, file = 'RData/data_08_03.rds')
library(knitr)
require(png)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), fig.width=8, fig.height=8, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
## Data from here:
## https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide
# source("project.R")
ts <- read.csv("RData/COVID-19-geographic-disbtribution-worldwide-2020-03-17.csv", stringsAsFactors=F)
ts$DateRep <- as.Date(ts$DateRep,format = '%d/%m/%Y')
country <- sort(as.character(unique(ts$Countries.and.territories)))
time_frame <- range(ts$DateRep)
n_days <- diff(time_frame) +1
I <- as.data.frame(matrix(NA,n_days,length(country)+1))
names(I) <- c('dates',country)
I[,1] <- seq(time_frame[1],time_frame[2],1)
for (i in 1:length(country)){
f <- which(ts$Countries.and.territories %in% country[i])
temp <- ts[f,]
for (j in 1:nrow(temp)){
f <- which( I$dates %in% temp$DateRep[j])
if(length(f)>1){
print('warning')
break
}
if(length(f)==1){
I[f,i+1] <- temp$Cases[j]
}
}
}
I[is.na(I)] <- 0
I_full <- I
date_week_finishing <-  as.Date('15/03/2020',format = '%d/%m/%Y')
f<- which(I_full$dates <= date_week_finishing)
I_full <- I_full[f,]
Threshold_criterion <- 100
d_limit <- date_week_finishing - 4*7+1
f <- which(I_full$dates >= d_limit)
I_full$dates[f[1]]
Cum_I_last_4weeks <- colSums(I_full[f,-1])
f <- which(Cum_I_last_4weeks >= 100)
I_active_transmission <- I_full[,c(1,f+1)]
library(knitr)
require(png)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), fig.width=8, fig.height=8, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
## Data from here:
## https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide
# source("project.R")
ts <- read.csv("RData/COVID-19-geographic-disbtribution-worldwide-2020-03-17.csv", stringsAsFactors=F)
ts$DateRep <- as.Date(ts$DateRep,format = '%d/%m/%Y')
country <- sort(as.character(unique(ts$Countries.and.territories)))
time_frame <- range(ts$DateRep)
n_days <- diff(time_frame) +1
I <- as.data.frame(matrix(NA,n_days,length(country)+1))
names(I) <- c('dates',country)
I[,1] <- seq(time_frame[1],time_frame[2],1)
for (i in 1:length(country)){
f <- which(ts$Countries.and.territories %in% country[i])
temp <- ts[f,]
for (j in 1:nrow(temp)){
f <- which( I$dates %in% temp$DateRep[j])
if(length(f)>1){
print('warning')
break
}
if(length(f)==1){
I[f,i+1] <- temp$Cases[j]
}
}
}
I[is.na(I)] <- 0
I_full <- I
date_week_finishing <-  as.Date('15/03/2020',format = '%d/%m/%Y')
f<- which(I_full$dates <= date_week_finishing)
I_full <- I_full[f,]
Threshold_criterion <- 100
d_limit <- date_week_finishing - 4*7+1
f <- which(I_full$dates >= d_limit)
I_full$dates[f[1]]
Cum_I_last_4weeks <- colSums(I_full[f,-1])
f <- which(Cum_I_last_4weeks >= 100)
I_active_transmission <- I_full[,c(1,f+1)]
data <- list(date_week_finishing = date_week_finishing,
date_criterion = d_limit,
Threshold_criterion = Threshold_criterion,
I_active_transmission = I_active_transmission,
Country = colnames(I_active_transmission)[-1])
saveRDS(data, file = paste0('RData/data_',date_week_finishing,'.rds'))
library(knitr)
require(png)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), fig.width=8, fig.height=8, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
## Data from here:
## https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide
# source("project.R")
ts <- read.csv("RData/COVID-19-geographic-disbtribution-worldwide-2020-03-17.csv", stringsAsFactors=F)
ts$DateRep <- as.Date(ts$DateRep,format = '%d/%m/%Y')
country <- sort(as.character(unique(ts$Countries.and.territories)))
time_frame <- range(ts$DateRep)
n_days <- diff(time_frame) +1
I <- as.data.frame(matrix(NA,n_days,length(country)+1))
names(I) <- c('dates',country)
I[,1] <- seq(time_frame[1],time_frame[2],1)
for (i in 1:length(country)){
f <- which(ts$Countries.and.territories %in% country[i])
temp <- ts[f,]
for (j in 1:nrow(temp)){
f <- which( I$dates %in% temp$DateRep[j])
if(length(f)>1){
print('warning')
break
}
if(length(f)==1){
I[f,i+1] <- temp$Cases[j]
}
}
}
I[is.na(I)] <- 0
I_full <- I
date_week_finishing <-  as.Date('08/03/2020',format = '%d/%m/%Y')
f<- which(I_full$dates <= date_week_finishing)
I_full <- I_full[f,]
Threshold_criterion <- 100
d_limit <- date_week_finishing - 4*7+1
f <- which(I_full$dates >= d_limit)
I_full$dates[f[1]]
Cum_I_last_4weeks <- colSums(I_full[f,-1])
f <- which(Cum_I_last_4weeks >= 100)
I_active_transmission <- I_full[,c(1,f+1)]
data <- list(date_week_finishing = date_week_finishing,
date_criterion = d_limit,
Threshold_criterion = Threshold_criterion,
I_active_transmission = I_active_transmission,
Country = colnames(I_active_transmission)[-1])
saveRDS(data, file = paste0('RData/data_',date_week_finishing,'.rds'))
