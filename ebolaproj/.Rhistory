# SI
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
# params <- gamma_mucv2shapescale(mean_SI, CV_SI)
# si <- distcrete("gamma", interval = 1L,
#                   shape = params$shape,
#                   scale = params$scale, w = 0.5)
# si$d(0:30) # problem of first one
SItrunc <- 40
# serial distribution
SI_Distr <- sapply(0:SItrunc, function(e) EpiEstim::DiscrSI(e,mean_SI,mean_SI*CV_SI) )
SI_Distr <- SI_Distr / sum(SI_Distr)
#simulate 40 days
R <- 1.5
pred <- projections::project(x = i, R = rep(R,2), R_fix_within = TRUE,
si = SI_Distr, n_days = 150, n_sim = 50)
# keep incidence of last 20 days
incidence <- data.frame(date = as.Date('01/05/2018',format='%d/%m/%Y')+seq(0,4*7-1),
I = tail(pred,4*7))
f <- which(colSums(incidence[,-1])==0) # remove location with 0 cases in last 20 days
if (length(f)>0) incidence <- incidence[,-(f+1)]
incidence <- incidence[,1:11]
# I_cum_hist <- colSums(head(pred,150-20))
save(incidence,R, file = 'simulated.RData')
rm(list = as.vector(ls()))
# devtools::load_all('.')
library(ebolaproj)
# load sample data to check
load(file = 'simulated.RData')
dim(incidence)
# number of locations
N_geo <- ncol(incidence)-1
# Serial interval
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
# final number of MCMC iterations (the whole thing,
# here with 10 locations runs in ~3.5mins) )
rep <- 2e2
sigma_prop <- rep(0.1,N_geo*2)         # initial proposal variances (they are now tuned!)
# initial incidence conditions
if ( N_geo>1 ){
mu0 <- colMeans(incidence[,-1])*SI$SItrunc
}else{
mu0 <- mean(incidence[,-1])*SI$SItrunc
}
# initially, we assume R=1 and choose initial condition accordingly, i.e. with mu0 case and R=1
# we expect the number of daily cases to stabilised at the mean of the observed incidence in the
# time window of interest
# this is use for the prior of initial number of cases, i.e. as the mean of an exponential distribution
# in practice, the mu0 cases will happen 100 days before the start of the time windows
theta0 <- c(rep(1,N_geo), mu0)          # initial parameter R=1 (time # of locations, and initial number of cases in the past)
##########################################################
# test just me testing the MCMC_iter without tuning
res1 <- MCMC_iter(incidence = incidence,
N_geo = N_geo,
iter = 1e2,
theta0 = theta0,
s = sigma_prop,
SI = SI,
mu0 = mu0)
##########################################################
Acc <- colSums(diff(res$theta)!=0)/rep          # acceptance rate (should be close to .2)
res <- MCMC_full(I = incidence,
N_geo = N_geo,
iter = rep,
theta0 = theta0,
s = sigma_prop,
SI = SI,
mu0 = mu0,
repli_adapt = 10,
within_iter = rep/10)
Acc <- colSums(diff(res$theta)!=0)/rep          # acceptance rate (should be close to .2)
Acc
# plot traces
plot(res$logL[,1])                                  # of likelihood
layout(matrix(1:N_geo,2,ceiling(N_geo/2),byrow = TRUE))
for (i in 1:N_geo) plot(res$theta[,i])              # of R's
for (i in 1:N_geo) plot(res$theta[,N_geo+i])        # of initial conditions
if (N_geo>1){
R_est <- apply(res$theta[,1:N_geo],2,
quantile,c(.5,.025,.975))   # median and 95%CrI of Rs by locations
I0_est <- apply(res$theta[,(N_geo+1):(2*N_geo)],2,
quantile,c(.5,.025,.975))   # median and 95%CrI of I0
}else{
R_est <- quantile(res$theta[,1],c(.5,.025,.975))
I0_est <- quantile(res$theta[,2],c(.5,.025,.975))
}
save.image('test_on_simulation1.RData')             # saving so far
layout(matrix(1:2,1,2,byrow = TRUE))
errbar(1:N_geo,R_est[1,],R_est[2,],R_est[3,],
xlab = 'location', ylab = 'R',ylim = c(0,3), bty = 'n')
lines(c(1,N_geo),rep(R,2), col = 'red')
# forward projection
Nsim <- 1e3                                           # number of simulation to get median and 95%CrI predictions
I_pred <- Proj_Pois(Results = res ,
NR_samples = 100,
Nsim_per_samples = 100,
week_forward = 4+4,
N_geo = N_geo,
SI = SI)
# function to project forward, see Rscript/useful_functions.R
# needs the parameters estimated (Results)
# number of simulations
# week_forward: number of week projected from the START of the time window, SO: includes the period of time
# for which we have data!!! e.g. if we have 2 weeks of data and want to project for the 4 weeks
# after that, week_forward should be 6.
# require number of locations + serial interval
devtools::install_github('recon/projections')
devtools::install_github('reconhub/projections')
I2 <- build_projections(I_pred, dates = NULL, cumulative = FALSE)
library(projections)
library(incidence)
devtools::install_github('reconhub/projections')
I2 <- build_projections(I_pred, dates = NULL, cumulative = FALSE)
library(projections)
devtools::install_github('reconhub/incidence')
library(incidence)
library(incidence)
library(projections)
library(epitrix)
library(EpiEstim)
library(Hmisc)
rm(list = as.vector(ls()))
# devtools::load_all('.')
library(ebolaproj)
# load sample data to check
load(file = 'simulated.RData')
dim(incidence)
# number of locations
N_geo <- ncol(incidence)-1
# Serial interval
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
# final number of MCMC iterations (the whole thing,
# here with 10 locations runs in ~3.5mins) )
rep <- 2e2
sigma_prop <- rep(0.1,N_geo*2)         # initial proposal variances (they are now tuned!)
# initial incidence conditions
if ( N_geo>1 ){
mu0 <- colMeans(incidence[,-1])*SI$SItrunc
}else{
mu0 <- mean(incidence[,-1])*SI$SItrunc
}
# initially, we assume R=1 and choose initial condition accordingly, i.e. with mu0 case and R=1
# we expect the number of daily cases to stabilised at the mean of the observed incidence in the
# time window of interest
# this is use for the prior of initial number of cases, i.e. as the mean of an exponential distribution
# in practice, the mu0 cases will happen 100 days before the start of the time windows
theta0 <- c(rep(1,N_geo), mu0)          # initial parameter R=1 (time # of locations, and initial number of cases in the past)
##########################################################
# test just me testing the MCMC_iter without tuning
res1 <- MCMC_iter(incidence = incidence,
N_geo = N_geo,
iter = 1e2,
theta0 = theta0,
s = sigma_prop,
SI = SI,
mu0 = mu0)
##########################################################
res <- MCMC_full(I = incidence,
N_geo = N_geo,
iter = rep,
theta0 = theta0,
s = sigma_prop,
SI = SI,
mu0 = mu0,
repli_adapt = 10,
within_iter = rep/10)
Acc <- colSums(diff(res$theta)!=0)/rep          # acceptance rate (should be close to .2)
Acc
# plot traces
plot(res$logL[,1])                                  # of likelihood
layout(matrix(1:N_geo,2,ceiling(N_geo/2),byrow = TRUE))
for (i in 1:N_geo) plot(res$theta[,i])              # of R's
for (i in 1:N_geo) plot(res$theta[,N_geo+i])        # of initial conditions
if (N_geo>1){
R_est <- apply(res$theta[,1:N_geo],2,
quantile,c(.5,.025,.975))   # median and 95%CrI of Rs by locations
I0_est <- apply(res$theta[,(N_geo+1):(2*N_geo)],2,
quantile,c(.5,.025,.975))   # median and 95%CrI of I0
}else{
R_est <- quantile(res$theta[,1],c(.5,.025,.975))
I0_est <- quantile(res$theta[,2],c(.5,.025,.975))
}
save.image('test_on_simulation1.RData')             # saving so far
layout(matrix(1:2,1,2,byrow = TRUE))
errbar(1:N_geo,R_est[1,],R_est[2,],R_est[3,],
xlab = 'location', ylab = 'R',ylim = c(0,3), bty = 'n')
lines(c(1,N_geo),rep(R,2), col = 'red')
# forward projection
I_pred <- Proj_Pois(Results = res ,
NR_samples = 10,
Nsim_per_samples = 10,
week_forward = 4+4,
N_geo = N_geo,
SI = SI)
# function to project forward, see Rscript/useful_functions.R
# needs the parameters estimated (Results)
# number of simulations
# week_forward: number of week projected from the START of the time window, SO: includes the period of time
# for which we have data!!! e.g. if we have 2 weeks of data and want to project for the 4 weeks
# after that, week_forward should be 6.
# require number of locations + serial interval
I2 <- build_projections(I_pred, dates = NULL, cumulative = FALSE)
I2 <- build_projections(t(I_pred), dates = NULL, cumulative = FALSE)
I2 <- build_projections(t(I_pred[,1,]), dates = NULL, cumulative = FALSE)
I2 <- build_projections(as.matrix(t(I_pred[,1,])), dates = NULL, cumulative = FALSE)
I2 <- build_projections(as.matrix(t(I_pred[,1,101:156])), dates = NULL, cumulative = FALSE)
temp <- as.matrix(t(I_pred[,1,101:156]))
View(temp)
I2 <- build_projections(t(temp), dates = NULL, cumulative = FALSE)
x=temp
>>>>>>> f5177717d6198f41fd5688dc16d80a93d078945f
devtools::douments
devtools::document()
devtools::document()
library(ebolaproj)
devtools::load_all(".")
getwd()
setwd('../')
getwd
getwd()
library(incidence)
library(projections)
library(epitrix)
library(EpiEstim)
library(Hmisc)
library(ebolaproj)
library("ebolaproj", lib.loc="~/R/win-library/3.5")
ebolaproj::Proj_Pois()
ebolaproj::Proj_Pois
setwd('ebolaproj')
devtools::document()
library(ebolaproj)
devtools::document()
library(ebolaproj)
devtools::load_all(".")
devtools::document()
library(ebolaproj)
devtools::document()
library(ebolaproj)
devtools::document()
library(ebolaproj)
setwd('../')
library(incidence)
library(projections)
library(epitrix)
library(EpiEstim)
library(Hmisc)
library(ebolaproj)
rm(list = as.vector(ls()))
# devtools::load_all('.')
library(ebolaproj)
# load sample data to check
load(file = 'simulated.RData')
dim(incidence)
set.seed(1)
# number of locations
N_geo <- ncol(incidence)-1
# Serial interval
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
# final number of MCMC iterations (the whole thing,
# here with 10 locations runs in ~3.5mins) )
rep <- 2e2
sigma_prop <- rep(0.1,N_geo*2)         # initial proposal variances (they are now tuned!)
# initial incidence conditions
if ( N_geo>1 ){
mu0 <- colMeans(incidence[,-1])*SI$SItrunc
}else{
mu0 <- mean(incidence[,-1])*SI$SItrunc
}
# initially, we assume R=1 and choose initial condition accordingly, i.e. with mu0 case and R=1
# we expect the number of daily cases to stabilised at the mean of the observed incidence in the
# time window of interest
# this is use for the prior of initial number of cases, i.e. as the mean of an exponential distribution
# in practice, the mu0 cases will happen 100 days before the start of the time windows
theta0 <- c(rep(1,N_geo), mu0)          # initial parameter R=1 (time # of locations, and initial number of cases in the past)
res <- MCMC_full(I = incidence,
N_geo = N_geo,
iter = rep,
theta0 = theta0,
s = sigma_prop,
SI = SI,
mu0 = mu0,
repli_adapt = 10,
within_iter = rep/10)
Acc <- colSums(diff(res$theta)!=0)/rep          # acceptance rate (should be close to .2)
Acc
# plot traces
plot(res$logL[,1])                                  # of likelihood
layout(matrix(1:N_geo,2,ceiling(N_geo/2),byrow = TRUE))
for (i in 1:N_geo) plot(res$theta[,i])              # of R's
for (i in 1:N_geo) plot(res$theta[,N_geo+i])        # of initial conditions
if (N_geo>1){
R_est <- apply(res$theta[,1:N_geo],2,
quantile,c(.5,.025,.975))   # median and 95%CrI of Rs by locations
I0_est <- apply(res$theta[,(N_geo+1):(2*N_geo)],2,
quantile,c(.5,.025,.975))   # median and 95%CrI of I0
}else{
R_est <- quantile(res$theta[,1],c(.5,.025,.975))
I0_est <- quantile(res$theta[,2],c(.5,.025,.975))
}
save.image('test_on_simulation1.RData')             # saving so far
start_time <- Sys.time()
I_pred <- Proj_Pois(Results = res ,
NR_samples = 100,
Nsim_per_samples = 100,
week_forward = 4+4,
N_geo = N_geo,
SI = SI)
end_time <- Sys.time()
end_time - start_time
I_pred <- Proj_Pois(Results = res ,
NR_samples = 10,
Nsim_per_samples = 10,
week_forward = 4+4,
N_geo = N_geo,
SI = SI)
apply(I_pred[,1,],2 quantile,c(.5,.0275,.975))
apply(I_pred[,1,],2, quantile,c(.5,.0275,.975))
I_pred <- Proj_Pois_incl_trusted(Results = res ,
NR_samples = 10,
Nsim_per_samples = 10,
week_forward = 4+4,
N_geo = N_geo,
SI = SI, I= incidence[,1])
I_pred <- Proj_Pois_incl_trusted(Results = res ,
NR_samples = 10,
Nsim_per_samples = 10,
week_forward = 4+4,
N_geo = N_geo,
SI = SI, I= incidence[,-1])
setwd('ebolaproj/')
devtools::documtent
devtools::document()
library(ebolaproj)
setwd('../')
rm(list = as.vector(ls()))
# devtools::load_all('.')
library(ebolaproj)
# load sample data to check
load(file = 'simulated.RData')
dim(incidence)
set.seed(1)
# number of locations
N_geo <- ncol(incidence)-1
# Serial interval
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
# final number of MCMC iterations (the whole thing,
# here with 10 locations runs in ~3.5mins) )
rep <- 2e2
sigma_prop <- rep(0.1,N_geo*2)         # initial proposal variances (they are now tuned!)
# initial incidence conditions
if ( N_geo>1 ){
mu0 <- colMeans(incidence[,-1])*SI$SItrunc
}else{
mu0 <- mean(incidence[,-1])*SI$SItrunc
}
# initially, we assume R=1 and choose initial condition accordingly, i.e. with mu0 case and R=1
# we expect the number of daily cases to stabilised at the mean of the observed incidence in the
# time window of interest
# this is use for the prior of initial number of cases, i.e. as the mean of an exponential distribution
# in practice, the mu0 cases will happen 100 days before the start of the time windows
theta0 <- c(rep(1,N_geo), mu0)          # initial parameter R=1 (time # of locations, and initial number of cases in the past)
res <- MCMC_full(I = incidence,
N_geo = N_geo,
iter = rep,
theta0 = theta0,
s = sigma_prop,
SI = SI,
mu0 = mu0,
repli_adapt = 10,
within_iter = rep/10)
Acc <- colSums(diff(res$theta)!=0)/rep          # acceptance rate (should be close to .2)
Acc
# plot traces
plot(res$logL[,1])                                  # of likelihood
layout(matrix(1:N_geo,2,ceiling(N_geo/2),byrow = TRUE))
for (i in 1:N_geo) plot(res$theta[,i])              # of R's
for (i in 1:N_geo) plot(res$theta[,N_geo+i])        # of initial conditions
if (N_geo>1){
R_est <- apply(res$theta[,1:N_geo],2,
quantile,c(.5,.025,.975))   # median and 95%CrI of Rs by locations
I0_est <- apply(res$theta[,(N_geo+1):(2*N_geo)],2,
quantile,c(.5,.025,.975))   # median and 95%CrI of I0
}else{
R_est <- quantile(res$theta[,1],c(.5,.025,.975))
I0_est <- quantile(res$theta[,2],c(.5,.025,.975))
}
save.image('test_on_simulation1.RData')             # saving so far
start_time <- Sys.time()
I_pred <- Proj_Pois(Results = res ,
NR_samples = 10,
Nsim_per_samples = 10,
week_forward = 4+4,
N_geo = N_geo,
SI = SI)
end_time <- Sys.time()
end_time - start_time
apply(I_pred[,1,],2, quantile,c(.5,.0275,.975))
I_pred <- Proj_Pois_incl_trusted(Results = res ,
NR_samples = 10,
Nsim_per_samples = 10,
week_forward = 4+4,
N_geo = N_geo,
SI = SI, I= incidence[,-1])
setwd('ebolaproj/')
devtools::document()
library(ebolaproj)
setwd('..')
getwd()
rm(list = as.vector(ls()))
# devtools::load_all('.')
library(ebolaproj)
# load sample data to check
load(file = 'simulated.RData')
dim(incidence)
set.seed(1)
# number of locations
N_geo <- ncol(incidence)-1
# Serial interval
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
# final number of MCMC iterations (the whole thing,
# here with 10 locations runs in ~3.5mins) )
rep <- 2e2
sigma_prop <- rep(0.1,N_geo*2)         # initial proposal variances (they are now tuned!)
# initial incidence conditions
if ( N_geo>1 ){
mu0 <- colMeans(incidence[,-1])*SI$SItrunc
}else{
mu0 <- mean(incidence[,-1])*SI$SItrunc
}
# initially, we assume R=1 and choose initial condition accordingly, i.e. with mu0 case and R=1
# we expect the number of daily cases to stabilised at the mean of the observed incidence in the
# time window of interest
# this is use for the prior of initial number of cases, i.e. as the mean of an exponential distribution
# in practice, the mu0 cases will happen 100 days before the start of the time windows
theta0 <- c(rep(1,N_geo), mu0)          # initial parameter R=1 (time # of locations, and initial number of cases in the past)
res <- MCMC_full(I = incidence,
N_geo = N_geo,
iter = rep,
theta0 = theta0,
s = sigma_prop,
SI = SI,
mu0 = mu0,
repli_adapt = 10,
within_iter = rep/10)
Acc <- colSums(diff(res$theta)!=0)/rep          # acceptance rate (should be close to .2)
Acc
# plot traces
plot(res$logL[,1])                                  # of likelihood
layout(matrix(1:N_geo,2,ceiling(N_geo/2),byrow = TRUE))
for (i in 1:N_geo) plot(res$theta[,i])              # of R's
for (i in 1:N_geo) plot(res$theta[,N_geo+i])        # of initial conditions
if (N_geo>1){
R_est <- apply(res$theta[,1:N_geo],2,
quantile,c(.5,.025,.975))   # median and 95%CrI of Rs by locations
I0_est <- apply(res$theta[,(N_geo+1):(2*N_geo)],2,
quantile,c(.5,.025,.975))   # median and 95%CrI of I0
}else{
R_est <- quantile(res$theta[,1],c(.5,.025,.975))
I0_est <- quantile(res$theta[,2],c(.5,.025,.975))
}
save.image('test_on_simulation1.RData')             # saving so far
start_time <- Sys.time()
I_pred <- Proj_Pois(Results = res ,
NR_samples = 10,
Nsim_per_samples = 10,
week_forward = 4+4,
N_geo = N_geo,
SI = SI)
end_time <- Sys.time()
end_time - start_time
apply(I_pred[,1,],2, quantile,c(.5,.0275,.975))
I_pred <- Proj_Pois_incl_trusted(Results = res ,
NR_samples = 10,
Nsim_per_samples = 10,
week_forward = 4+4,
N_geo = N_geo,
SI = SI, I= incidence[,-1])
apply(I_pred[,1,],2, quantile,c(.5,.0275,.975))
I_pred <- Proj_NegBin_incl_trusted(Results = res ,
NR_samples = 10,
Nsim_per_samples = 10,
week_forward = 4+4,
N_geo = N_geo,
SI = SI, I= incidence[,-1])
I_pred <- Proj_NegBin_incl_trusted(Results = res ,
NR_samples = 10,
Nsim_per_samples = 10,
week_forward = 4+4,
N_geo = N_geo,Overdispersion = 0.03,
SI = SI, I= incidence[,-1])
apply(I_pred[,1,],2, quantile,c(.5,.0275,.975))
