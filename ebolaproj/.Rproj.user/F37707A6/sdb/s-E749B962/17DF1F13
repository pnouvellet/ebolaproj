{
    "collab_server" : "",
    "contents" : "#' MCMC iterate\n#'\n#' run the MCMC to sample posterior of R and initial coniditions at each location \n#' FYI: this is called internally by adapt_tuning\n#' \n#' @param I the incidence for the time window during which we assume Rt to be constant.  \n#'           I is a dataframe, first column are dates then incidence for all locations\n#'           nb of row is the size of time widows, dates must be sequential\n#' \n#' @param N_geo integer of  numbers of locations\n#'                   \n#' @param iter integer, the number of iteration for the MCMC\n#'\n#' @param theta0 vector of inital parameters\n#'\n#' @param s variance of proposal distributions (log-normal) \n#' \n#' @param SI Serial interval distribution (see SI_gamma_dist_EpiEstim)\n#' \n#' @param mu0: initial conidtions to guaranty that if R=1, then we predict the number of cases in the future will stablise at the mean number of cases observed in the time window\n#'              mu0 is also used as the mean of the (exponential) prior for intial conditions estimated\n#'              \n#' @param repli number of time the variance of the proposal is tuned (10 tends to be ok)\n#' \n#' @param within_iter iterations for evaluate the accpetance with new proposal variances\n#' \n#' @details  res a list containing 2 matrices: theta: matrix of posterior samples\n#'                      and logL: matrix of associated log-likelihood\n# \n\nMCMC_full <- function(I,N_geo,iter,theta0,s,SI,mu0,repli_adapt,within_iter){\n \n  res0 <- adapt_tuning(repli = repli_adapt,\n                       I = I,\n                       N_geo = N_geo,\n                       within_iter = within_iter,\n                       theta0 = theta0,\n                       sigma = s,\n                       SI = SI,\n                       mu0 = mu0)\n  # adaptative tuning bit: we run an MCMC with rep/10 iterations, then\n  # adjust the proposal variance to reach 0.2\n  # do again using parameter value from the last iteration of the previous MCMC\n  # repeat 10 times\n  # from experience, this is enough to tunes proposal variances well, but worth checking\n  # see below for final acceptance rate output \n  # see Rscript/MCMC_Rt_2018.R for full function\n  \n  # print('halfway!')             # message halfway through (effectively, including tuning, we do 2xrep iterations)\n  \n  res <- MCMC_iter(incidence = I ,\n                   N_geo = N_geo,\n                   iter = iter,\n                   theta0 = res0$theta0,\n                   s = res0$sigma,\n                   SI = SI,\n                   mu0 = mu0)\n  # run the MCMC to sample posterior of R and initial coniditions at each location\n  # FYI: this is called internally by adapt_tuning\n  # see Rscript/MCMC_Rt_2018.R for full function\n  # needs:\n  # I: the incidence for the time window during which we assume Rt to be constant. \n  # N_geo: the number of locations\n  # iter: the number of iteration for the MCMC\n  # theta0: inital parameters, here taken from the last MCMC iteration after tuning (save some burn-in)\n  # s: variance of proposal distribution (log-normal)\n  # SI: the serial interval(use SI_gamma_dist_EpiEstim to define), or need to be a list with vector dist for the daily distribution and SItrunc: an integer for the threshold of serial interval, if SItrunc=40, then dist is 41 element long to include day 0\n  # mu0: initial conidtions to guaranty that if R=1, then we predict the number of cases in the future will stablise at the mean number of cases observed in the time window\n  # mu0 is also used as the mean of the (exponential) prior for intial conditions estimated\n  \n \n  return(res)\n}\n\n#' You can also document internal package function with roxygen\n#'\n#' Just make sure you add 'noRd' so no latex help files are being created.\n#' @noRd\nsome_internal_function <- function() {\n  NA\n}\n\n",
    "created" : 1527182603450.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "458808972",
    "id" : "17DF1F13",
    "lastKnownWriteTime" : 1527236984,
    "last_content_update" : 1527236984340,
    "path" : "~/GitHub/ebolaproj/ebolaproj/R/MCMC_full.R",
    "project_path" : "R/MCMC_full.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}