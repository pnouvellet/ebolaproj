{
    "collab_server" : "",
    "contents" : "#' adaptative tuning\n#'\n#' tune proposal and give good initial values to start 'proper' MCMC\n#'  try to tune variance toward 20% acceptance\n#' \n#' @param repli number of time the variance of the proposal is tuned (10 tends to be ok)\n#' \n#' @param within_iter iterations for evaluate the accpetance with new proposal variances\n#'                   \n#' @param sigma original variance to start with\n#'\n#' @param others same as in MCMC_iter function\n#'\n#' \n#' @details res list of 2 vectors: theta0: posterior samples at the last iterations\n#'                       sigma: new variance for the proposal distribution\n# \n## adaptative tuning\n# tune proposal and give good initial values to start 'proper' MCMC\n# repli: number of time the variance of the proposal is tuned (10 tend to be ok)\n# within_iter: iteration for evaluate the accpetance with new proposal variances\n# sigma: original variance to start with\n# others: as in MCMC_iter\nadapt_tuning <- function(repli,I,N_geo,within_iter,theta0,sigma,SI,mu0){\n  \n  new_sigma <- sigma\n  for (i in 1:repli){\n    # run MCMC with wthin_iter iterations\n    res <- MCMC_iter(incidence = I ,\n                     N_geo = N_geo,\n                     iter = within_iter,\n                     theta0 = theta0,\n                     s = new_sigma, \n                     SI = SI, \n                     mu0 = mu0)\n    \n    # colSums(diff(res$theta)!=0)/(within_iter-1) \n    # tune the variance according to accpetance\n    new_sigma <- adapt(theta = res$theta,\n                       s = new_sigma,\n                       it = within_iter)\n    \n    # new starting value for the parameters for the next round of MCMC\n    theta0 <- res$theta[within_iter,]\n    # plot(res$theta[,2],ylim=c(0,50))\n  }\n  res <- list(theta0 = theta0,\n              sigma = new_sigma)\n}\n\n\n\n#' You can also document internal package function with roxygen\n#'\n#' Just make sure you add 'noRd' so no latex help files are being created.\n#' @noRd\nsome_internal_function <- function() {\n  NA\n}\n\n",
    "created" : 1527237126295.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3872867046",
    "id" : "3C077ED3",
    "lastKnownWriteTime" : 1527237153,
    "last_content_update" : 1527237153159,
    "path" : "~/GitHub/ebolaproj/ebolaproj/R/adapt_tuning.R",
    "project_path" : "R/adapt_tuning.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}