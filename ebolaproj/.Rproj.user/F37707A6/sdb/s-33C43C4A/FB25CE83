{
    "collab_server" : "",
    "contents" : "#' MCMC iterate\n#'\n#' run the MCMC to sample posterior of R and initial coniditions at each location \n#' FYI: this is called internally by adapt_tuning\n#' \n#' @param incidence the incidence for the time window during which we assume Rt to be constant.  \n#'           I is a dataframe, first column are dates then incidence for all locations\n#'           nb of row is the size of time widows, dates must be sequential\n#' \n#' @param N_geo integer of  numbers of locations\n#'                   \n#' @param iter integer, the number of iteration for the MCMC\n#'\n#' @param theta0 vector of inital parameters, here taken from the last MCMC iteration after tuning (save some burn-in)\n#'\n#' @param s variance of proposal distributions (log-normal) - tuned previously\n#' \n#' @param SI Serial interval distribution (see SI_gamma_dist_EpiEstim)\n#' \n#' @param mu0: initial conidtions to guaranty that if R=1, then we predict the number of cases in the future will stablise at the mean number of cases observed in the time window\n#'              mu0 is also used as the mean of the (exponential) prior for intial conditions estimated\n#' \n#' @details  res a list containing 2 matrices: theta: matrix of posterior samples\n#'                      and logL: matrix of associated log-likelihood\n# \n\nMCMC_iter <- function(incidence,N_geo,iter,theta0,s,SI,mu0){\n  \n  I <- incidence[,-1]     # remove dates (everything needs to be consecutive days)\n  \n  #############################################################################\n  # for MCMC\n  thetas <- matrix(NA,iter,N_geo*2)  # Rt's and initial conditions for each location\n  L <- thetas                         # store likelihoods\n  \n  #############################################################################\n  # get the daily 'forces of infections'\n  lambda <- lambda_fct(param = theta0 , I = t(I), N_l = N_geo ,\n                       ws = rev(SI$dist) , SItrunc = SI$SItrunc)\n  \n  L1 <- Like1(lambda,t(I),theta0[1:N_geo])\n  L[1,] <- L1\n  thetas[1,] <- theta0       \n  \n  #############################################################################\n  # sampling\n  for (i in 2:iter){   \n    #print(i)\n    for (j in 1:(2*N_geo)){\n      Ts <- theta0\n      lambdaT <- lambda\n      # propose new parameter j\n      Ts[j] <- Ts[j]*exp(s[j]*rnorm(1,0,1))\n      # get the new 'force of infection'\n      lambdaT <- lambda_fct(param = Ts , I = t(I), N_l = N_geo ,\n                            ws = rev(SI$dist) , SItrunc = SI$SItrunc)\n      # get the likelihood for proposae value\n      Lint <- Like1(lambdaT,t(I),Ts[1:N_geo])\n      \n      #get the ratio with previous value of parameter and correct for porposal (and, only for initial conditions, prior distribution)\n      if (j <= N_geo){\n        r <- exp(Lint-L1)*Ts[j]/theta0[j]\n      }else{\n        r <- exp(Lint-L1)*Ts[j]/theta0[j]*exp(1/mu0[j-N_geo]*(theta0[j]-Ts[j])) # with weak exponential prior\n      }\n      \n      # accept or reject\n      if (runif(1,0,1) <= r){\n        theta0[j] <- Ts[j]  # if accept, keep new parameter value\n        lambda <- lambdaT   # if accept, keep new force of infection\n        L1 <- Lint          # if accept, keep new lieklihood\n      }  \n      L[i,j] <- L1    # store final likelihood\n    }\n    \n    thetas[i,] <- theta0  # store final parameter values for this iteration\n  }\n  \n  ####\n  res <- list(theta = thetas, logL = L)\n  return(res)\n}\n\n#' You can also document internal package function with roxygen\n#'\n#' Just make sure you add 'noRd' so no latex help files are being created.\n#' @noRd\nsome_internal_function <- function() {\n  NA\n}\n\n",
    "created" : 1527234171347.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "511098954",
    "id" : "FB25CE83",
    "lastKnownWriteTime" : 1527234370,
    "last_content_update" : 1527234370333,
    "path" : "~/GitHub/ebolaproj/ebolaproj/R/MCMC_iter.R",
    "project_path" : "R/MCMC_iter.R",
    "properties" : {
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}