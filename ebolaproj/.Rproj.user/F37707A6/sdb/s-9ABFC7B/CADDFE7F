{
    "collab_server" : "",
    "contents" : "## do joint Rt estimate and reconstructing past incidence\nrm(list=ls(all.names=TRUE))\nsource('Rscripts/useful_functions.R')\nsource('Rscripts/MCMC_Rt_2018.R')\n\n# load sample data to check\nload(file = 'Robjects/simulated.RData')\n# simulated data contains a dataframe of dates + incidence timeseries (consecutive days)\n# for each location of interest - simulated using projection package and Poisson offspring \n# distribution. see simulated_data.R\nmatplot(ag_incidence(incidence,5)[,2:ncol(incidence)])   # plot incidence over 5 days period see ag_incidence (aggregate) function in Rscript/useful_functions.R\n\n# number of locations\nN_geo <- ncol(incidence)-1                                  \n\n# Serial interval \nmean_SI <- 14.2\nCV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_\nSI <- SI_gamma_dist_EpiEstim(mu = mean_SI,\n                            cv = CV_SI, \n                            SItrunc = 40)\n# function SI_gamma_dist_EpiEstim use EpiEstim to get discrete serial interval (normalised with truncation)\n# see Rscript/useful_functions.R for details\n\n# Rt and past incidence estimation based on given incidence\n# we assume for the period given, Rt is constant, and \n# previous to the first incidence date, we reconstruct the incidence\n#\n# so the input (i.e. here: incidence) in term of incidence is equivalent to the last 'time-window' \n# (in EpiEstim language) before predicting forward\n\nrep <- 5e3                             # final number of MCMC iterations (the whole thing, here with 9 locations runs in ~3.5mins) )\nsigma_prop <- rep(0.1,N_geo*2)         # initial proposal variances (they are now tuned!)\n# initiallisation\nif ( N_geo>1 ){\n  mu0 <- colMeans(incidence[,-1])*SI$SItrunc  \n}else{\n  mu0 <- mean(incidence[,-1])*SI$SItrunc  \n}\n# initially, we assume R=1 and choose initial condition accordingly, i.e. with mu0 case and R=1 \n# we expect the number of daily cases to stabilised at the mean of the observed incidence in the \n# time window of interest\n# this is use for the prior of initial number of cases, i.e. as the mean of an exponential distribution\n# in practice, the mu0 cases will happen 100 days before the start of the time windows\n\ntheta0 <- c(rep(1,N_geo), mu0)          # initial parameter R=1 (time # of locations, and initial number of cases in the past)  \n\nres0 <- adapt_tuning(repli = 10,\n                     I = incidence,\n                     N_geo = N_geo,\n                     within_iter = rep/10,\n                     theta0 = theta0,\n                     sigma = sigma_prop,\n                     SI = SI,\n                     mu0 = mu0)\n# adaptative tuning bit: we run an MCMC with rep/10 iterations, then\n# adjust the proposal variance to reach 0.2\n# do again using parameter value from the last iteration of the previous MCMC\n# repeat 10 times\n# from experience, this is enough to tunes proposal variances well, but worth checking\n# see below for final acceptance rate output \n# see Rscript/MCMC_Rt_2018.R for full function\n\nprint('halfway!')             # message halfway through (effectively, including tuning, we do 2xrep iterations)\n\nres <- MCMC_iter(I = incidence,\n                 N_geo = N_geo,\n                 iter = rep,\n                 theta0 = res0$theta0,\n                 s = res0$sigma,\n                 SI = SI,\n                 mu0 = mu0)\n# run the MCMC to sample posterior of R and initial coniditions at each location\n# FYI: this is called internally by adapt_tuning\n# see Rscript/MCMC_Rt_2018.R for full function\n# needs:\n# I: the incidence for the time window during which we assume Rt to be constant. \n# N_geo: the number of locations\n# iter: the number of iteration for the MCMC\n# theta0: inital parameters, here taken from the last MCMC iteration after tuning (save some burn-in)\n# s: variance of proposal distribution (log-normal)\n# SI: the serial interval(use SI_gamma_dist_EpiEstim to define), or need to be a list with vector dist for the daily distribution and SItrunc: an integer for the threshold of serial interval, if SItrunc=40, then dist is 41 element long to include day 0\n# mu0: initial conidtions to guaranty that if R=1, then we predict the number of cases in the future will stablise at the mean number of cases observed in the time window\n# mu0 is also used as the mean of the (exponential) prior for intial conditions estimated\n\n##########################################################\n# # test just me testing the MCMC_iter without tuning\n# res1 <- MCMC_iter(I = incidence,\n#                   N_geo = N_geo,\n#                   iter = 1e2,\n#                   theta0 = theta0,\n#                   s = sigma_prop,\n#                   SI = SI,\n#                   mu0 = mu0)\n# \n##########################################################\n\nAcc <- colSums(diff(res$theta)!=0)/rep          # acceptance rate (should be close to .2)\nAcc\n# plot traces\nplot(res$logL[,1])                                  # of likelihood\nlayout(matrix(1:N_geo,2,ceiling(N_geo/2),byrow = TRUE))\nfor (i in 1:N_geo) plot(res$theta[,i])              # of R's\nfor (i in 1:N_geo) plot(res$theta[,N_geo+i])        # of initial conditions\n\nif (N_geo>1){\n  apply(res$theta[,1:N_geo],2,quantile,c(.5,.025,.975))   # median and 95%CrI of Rs by locations\n}else{\n  quantile(res$theta[,1],c(.5,.025,.975))\n}\n# save.image('test_on_simulation1.RData')             # saving so far\n\n\n# forward projection\nNsim <- 1e3                                           # number of simulation to get median and 95%CrI predictions\nI_pred <- Sim_Pois(Results = res ,\n         Nsim = Nsim, \n         week_forward = 5,\n         N_geo = N_geo,\n         SI = SI)\n# function to project forward, see Rscript/useful_functions.R\n# needs the parameters estimated (Results)\n# number of simulations\n# week_forward: number of week projected from the START of the time window, SO: includes the period of time\n# for which we have data!!! e.g. if we have 2 weeks of data and want to project for the 4 weeks \n# after that, week_forward should be 6.\n# require number of locations + serial interval\n\n# plot the observed incidence in the time window of interest and the median and 95%CrI predictions\nlayout(matrix(1:N_geo,2,ceiling(N_geo/2),byrow = TRUE))\nfor(i in 1:N_geo){\n  CI_pred <- apply(I_pred[,i,101:dim(I_pred)[3]],2,quantile,c(.5,.025,.975))\n  plot(1:nrow(incidence),incidence[,1+i],\n       xlim=c(0,ncol(CI_pred)), \n       ylim = c(0,1+max(c(incidence[,1+i],as.vector(CI_pred)))) )\n  \n  x <- 1:ncol(CI_pred)\n  lines(x,CI_pred[1,],col='blue',lwd=2)\n  polygon(c(x,rev(x)), c(CI_pred[2,],rev(CI_pred[3,])), \n          col = rgb(0,0,1,.2), border = FALSE )\n}\n",
    "created" : 1527172148558.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3447831540",
    "id" : "CADDFE7F",
    "lastKnownWriteTime" : 1526504779,
    "last_content_update" : 1526504779,
    "path" : "C:/Users/pn211/Dropbox (SPH Imperial College)/Rt_projection_2018/Rt_proj_1.0.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}