{
    "collab_server" : "",
    "contents" : "---\ntitle: 'Ebola: Reproduction number and projection'\nauthor: \"Pierre Nouvellet & Anne Cori\"\ndate: 2018-05-24\n---\n  \n  ```{r options, include = FALSE, message = FALSE, warning = FALSE, error = FALSE}\nlibrary(knitr)\n\nopts_chunk$set(collapse = TRUE)\n\n\n```\n\n\nThis practical aims to illustrate the basics of **Ebola modelling**\n  using R, with an emphasis on how the method works. \n\nWe will start with a basic model for Ebola.\nWe will then illustrate how to account for an evolving context, e.g. implementation of control measures.\nFinally, we will explore basic principle of model fitting.\n\n# Core Concepts \n\nFrom the previous lecture, we will further develop these concepts:\n  \n  - Compartmental models\n- Flow diagrams and writing down a model \n- Natural history of Ebola\n- Control strategies \n- Introduction to model fitting\n\n## Required packages\n\n\n```{r eval = FALSE}\ninstall.packages(\"deSolve\", dep=TRUE)\ninstall.packages(\"gridExtra\", dep = TRUE)\n```\n\nThen load the packages using:\n  \n  ```{r}\nlibrary(deSolve)\n\n```\n\n# The basic Ebola model\n\n- S : Susceptible humans\n- E : Exposed humans\n- I : Infected/Infectious humans\n- R : humans recovered from infection (with life lasting immunity)\n\n## The model \n\nThe code below will allow you to simulate an Ebola outbreak.\nBut, can you understand it?\n\nFirst make a flow diagram to connect the different compartments of the model according to the equation below.\n\nOn a line of code, anything after a '#' is interpreted as a comment.\nAt the moment the code below is not well commented on, try to comment the code appropriately.\n\n\n```{r,include=TRUE}\nrm(list=ls())\n\nDyn.Ebola.Basic <- function (t, state, parameters) {\n  \n  \n  with(as.list(c(state,parameters)),             # ??\n       {\n         N <- S + E + I + R                      # ??\n         # ??\n         dS  <-  - S/N * beta * I                # ??\n         dE <- S/N * beta * I - gamma * E        # ??\n         dI <- gamma * E - sigma * I             # ??\n         \n         dR <- (1 - p.cfr) * sigma * I           # ??\n         \n         dDead <- p.cfr * sigma * I              # ??\n         dOnset <- gamma * E                     # ??\n         \n         # ??\n         dx <- c(dS, dE, dI, dR, dDead, dOnset)\n         list(dx)\n       }\n  )\n}\n```\n\n\nThen write the down the equation that characterize this particular model:\n  \n  <!-- $$\\ \\frac{dS}{dt}  = - \\beta \\frac {S_t I_t}{N_t} $$ -->\n  <!-- $$\\ \\frac{dE}{dt}  =  \\beta \\frac {S_t I_t}{N_t} - \\sigma E_t $$ -->\n  <!-- $$\\ \\frac{dI}{dt}  =  \\sigma E_t + \\gamma I_t  $$ -->\n  \n  <!-- $$\\ \\frac{dR}{dt}  =  (1-\\mu) \\gamma I_t  $$ -->\n  \n  \n  ### The parameters\n  \n  ```{r, include = TRUE}\n# ??\nT.lat\t<- 10    \t            #\t??\ngamma <- 1/T.lat            #\t??\n\nT.outcome <- 12             # ??\nsigma <- 1/T.outcome        # ??\n\np.cfr\t<-\t0.6\t\t            #\t??\n\nR0 <- 1.5                   #\t??\nR.int <- 0.9                # ??\n\nt.intervention = 25*7       # ??\n\n# ??\nN <- 5e+5                   # ??\nE0 <- 10                    # ??\n\n```\n\n\nKnowing the rate of transmission is typically very difficult without detailed studies. \nHowever, measurig the reproduction number may be easier.\n\nFrom knowledge of the reproduction number, we can work out what is the rate of transmission ($\\beta$).\n\nIn this simple model, we have $$R_0 = \\frac{\\beta}{\\gamma} $$. So given the value for $R_0$ above, what is the transmission rate? \n\n<!-- $\\beta = R_0* \\gamma$. -->\n  \n  \n  ### Numerically solve the system\n  \n  We then need to solve the system numerically, i.e. using parameters values and starting conditions, we \ncan predict the trajectories of each compartment over time.\n\nThe code below does that. Try to understand what is being done and comment the code appropriately.\n\n```{r}\n\nparams <- c(gamma=gamma, sigma=sigma,\n            p.cfr=p.cfr, beta=R0/T.outcome )   # ??\n\n\ntimes  = seq(0, t.intervention, by=1)          # ??\n\n# ??\nxstart <- c(S = N-E0,E = E0,  \n            I = 0, R = 0,\n            Dead = 0, Onset = 0)               # ??\n\nout <- as.data.frame(ode(y = xstart, times = times, \n                         func = Dyn.Ebola.Basic, parms = params))   # ??\n\n\n```\n\n### Plot some results\n\nCan you interpret what is inside the dataframe 'out'. you can view the dataframe by typing 'View(out)'\n\nThe code below allow to visualise some key results.\n\nFill the axis and legend for the plots and comment the code. \nInterpret the results? \n<!-- Concept of exponential growth. -->\n  \n  ```{r}\n\n# ??\nplot(out$time, out$E, col='blue',type='l',ylim = c(0,max(out$E)),\n     xlab ='??', ylab = '??')\nlines(out$time, out$I, col='red')\nlines(out$time, out$R, col='green')\n\nlegend('topleft',c('??','??','??'),lwd=2,col=c('blue','red','green'))\n\n# ??\nf <- seq(1,t.intervention,by=7)\ntime <- out$time[f]                # ??\nWeekly.onset <- diff(out$Onset[f])  # ??\nWeekly.death <- diff(out$Dead[f])   # ??\n\nplot(time[-1], Weekly.onset, col='blue',type='p', ylim = c(0,max(Weekly.onset)),\n     xlab ='??', ylab = '??')\nlines(time[-1], Weekly.death,type='p',col='red')\n\nlegend('topleft',c('??','??'),pch=1,col=c('blue','red'))\n\n```\n\nFill the axis and legend for the plot. \nInterpret the results? Concept of exponential growth.\n\n### Change the transmissibility\n\nNow we want to simulate a change in transmissibility linked to an intervention.\n\nCompare to the code above, what is changed in the code below?\n\nTry to understand what is being done and comment the code appropriately.\n\n\n```{r}\n# Simulation 2\n\nparams2 <- c(gamma=gamma, sigma=sigma,\n             p.cfr=p.cfr, beta=R.int/T.outcome) # ??\n\n\ntimes2  = seq(t.intervention, 2*t.intervention, by=1)\n# Starting conditions\nxstart2 <- c(S = tail(out$S,1), E = tail(out$E,1),  \n             I = tail(out$I,1), R = tail(out$R,1),\n             Dead = tail(out$Dead,1), Onset = tail(out$Onset,1))  # ??\n\n\nout2 <- as.data.frame(ode(y = xstart2, times = times2, \n                          func = Dyn.Ebola.Basic, parms = params2))  # ??\n```\n\nWhat is being done in the code above?\n\n<!-- 1- The reproduction number takes its second value, therefore the rate of transmission is decreased. -->\n  \n  <!-- 2- The new initial conditions are set to the previous final state of the system. -->\n  \n  <!-- 3- The model is then run. -->\n  \n  Some results for the new output can be seen below.\nTry to comment the code and fill in relevant information in the graphs.\n\n```{r}\n# ??\nplot(out2$time, out2$E, col='blue',type='l',ylim = c(0,max(out$E)),\n     xlab ='??', ylab = '??')\nlines(out2$time, out2$I, col='red')\nlines(out2$time, out2$R, col='green')\n\nlegend('topleft',c('??','??','??'),lwd=2,col=c('blue','red','green'))\n\n# ??\nf <- seq(1,t.intervention,by=7)\ntime <- out2$time[f]\nWeekly.onset <- diff(out2$Onset[f])\nWeekly.death <- diff(out2$Dead[f])\n\nplot(time[-1], Weekly.onset, col='blue',type='p', ylim = c(0,max(Weekly.onset)),\n     xlab ='??', ylab = '??')\nlines(time[-1], Weekly.death,type='p',col='red')\n\nlegend('topleft',c('?','??'),pch=1,col=c('blue','red'))\n```\n\n### Merging both situations\n\nCan we plot both trajectory? Pre- and post-intervention? see below.\nTry to comment the code and fill in relevant information in the graphs.\n\n```{r}\n\n## check full dynamics\n# Checking the simulations\nout3 <- rbind(out,out2[-1,])\n\nplot(out3$time, out3$E, col='blue',type='l',ylim = c(0,max(out$E)),\n     xlab ='??', ylab = '??')\nlines(out3$time, out3$I, col='red')\nlines(out3$time, out3$R, col='green')\n\nlegend('topleft',c('??','??','??'),lwd=2,col=c('blue','red','green'))\n\n# ??\nf <- seq(1,2*t.intervention,by=7)\ntime <- out3$time[f]\nWeekly.onset <- diff(out3$Onset[f])\nWeekly.death <- diff(out3$Dead[f])\n\nplot(time[-1], Weekly.onset, col='blue',type='p', ylim = c(0,max(Weekly.onset)),\n     xlab ='??', ylab = '??')\nlines(time[-1], Weekly.death,type='p',col='red')\n\nlegend('topleft',c('??','??'),pch=c(1,1),col=c('blue','red'))\n```\n\n# Second model\n\nWe aim to reproduce the results above by calling the numerical solver only once.\nWe also would like to compare our results to data.\n\nComment an interpret the code below:\n  \n  What changed compared to the code used above?\n\nFirst, we write a new model that will be able to account for changes in transmissibility.\n\nTry to understand what is being done and comment the code appropriately.\n\n```{r}\n\nDyn.Ebola.Basic2 <- function (t, state, parameters) {\n  \n  with(as.list(c(state,parameters)), #??\n       {\n         N <- S + E + I + R  # ??\n         \n         beta <- ReproNb*sigma  # ??\n         \n         # ??\n         dS  <-  - S/N * beta * I                # ??\n         dE <- S/N * beta * I - gamma * E        # ??\n         dI <- gamma * E - sigma * I             # ??\n         \n         dR <- (1 - p.cfr) * sigma * I           # ??\n         \n         dDead <- p.cfr * sigma * I              # ??\n         dOnset <- gamma * E                     # ??\n         \n         dReproNb <- 0                           # ??\n         \n         # ??\n         dx <- c(dS, dE, dI, dR, dDead, dOnset, dReproNb )\n         list(dx)\n       }\n  )\n}\n\n```\n\n### Initial conditions\n\nThen we set initial conditions and time varying parameters.\n\nTry to understand what is being done and comment the code appropriately.\n\n```{r}\n\ntimes  = seq(0, 2 * t.intervention, by=1)          # ??\n# ??\nxstart <- c(S = N-E0,E = E0,  \n            I = 0, R = 0,\n            Dead = 0, Onset = 0, ReproNb = R0)               # ??\n\n# ??\neventdat <- data.frame(var = \"ReproNb\", time = t.intervention,\n                       value = R.int, method = \"rep\")         # ??\n\n\nout <- as.data.frame(ode(y = xstart, times = times, \n                         func = Dyn.Ebola.Basic2, parms = params,\n                         events = list(data = eventdat)))   # ??\n```\n\n### Plotting results\n\nFinally we check the results and compare with observed data.\n\nFirst dowload the dataset: [compartmental-ebola-pratical.csv](../../data/compartmental-ebola-pratical.csv).\n\nTry to comment the code and fill in relevant information in the graphs.\n\n```{r}\n# Checking the simulations\nplot(out$time, out$E, col='blue',type='l',ylim = c(0,max(out$E)),\n     xlab ='??', ylab = '??')\nlines(out$time, out$I, col='red')\nlines(out$time, out$R, col='green')\n\nlegend('topleft',c('??','??','??'),lwd=2,col=c('blue','red','green'))\n\n# ??\nf <- seq(1,2*t.intervention,by=7)  # ??\ntime <- out$time[f]                # ??\nWeekly.onset <- diff(out$Onset[f])  # ??\nWeekly.death <- diff(out$Dead[f])   # ??\n\n```\n\n\n```{r eval = FALSE}\ndat <- read.csv('onset_data.csv')\n```\n\n\nOnce imported, the data should look like:\n  \n  ```{r read_files, echo = -c(1)}\ndat <- read.csv(\"../../static/data/compartmental-ebola-pratical.csv\")\n\n\nplot(time[-1], Weekly.onset, col='blue',type='p', ylim = c(0,max(dat$incidence)),\n     xlab ='??', ylab = '??')\nlines(time[-1], Weekly.death,type='p',col='red')\n\nlines(dat$date, dat$incidence, type='p',pch=3, col='blue')\n\nlegend('topleft',c('??','??','??'),pch=c(1,3,1),col=c('blue','blue','red'))\n\n\n```\n\nNow, try to modify:\n  \n  - the initial number in the exposed class, and \n\n- the reproduction post-intervention.\n\nRe-run the model and observe the fit.\n\nTry to obtain a better fit by changing paraemters.\n\n\n### Exploration of fitting\n\nFitting manually to the data like above is tedious and not rigorous. We can explore a simple statistical method.\n\nLet's assume that we want to fit the initial number in the exposed class and the reproduction post-intervention.\nClearly, we must find the values for those parameters such that our predictions matched best the observations.\n\nAssuming that the incidence in a given week follows a Poisson distribution with mean given by our prediction:\n$$P(I^{obs}_t|\\theta) \\propto  Poiss(I^{pred}_t) $$.\n\n\nIf each weekly incidences are assumed independent, the likelihood of the model could be written as:\n$$ L=\\Pi [P(I^{obs}_t|\\theta)]  $$.\n\nin a very simple way, maximizing this likelihood will give us our best parameters.\n\n### In practice\n\nInterpret and comment the code below and add information on the plot.\n\nIn particular, what lighter color on the heat-graph represents? You can view the matrix L by typing 'View(L)' in the console.\n\n```{r}\nE_ini <- seq(25,35,length=10)      # ??\nR2 <- seq(.7,.9,length=10)         # ??\nL <- matrix(NA,length(E_ini),length(R2))   # ??\n\nfor (i in 1:length(E_ini)){   # ??\nfor (j in 1:length(R2)){    # ??\nxstart <- c(S = N-E_ini[i],E = E_ini[i],  \nI = 0, R = 0,\nDead = 0, Onset = 0, ReproNb = R0)               # ??\n\neventdat <- data.frame(var = \"ReproNb\", time = t.intervention,\nvalue = R2[j], method = \"rep\")          # ??\n\nout <- as.data.frame(ode(y = xstart, times = times, \nfunc = Dyn.Ebola.Basic2, parms = params,\nevents = list(data = eventdat)))   # ??\n\nWeekly.onset <- diff(out$Onset[f]) # ??\n\nL[i,j] <- sum(dpois(x = dat$incidence,lambda = Weekly.onset,log = TRUE))  # ??\n\n}\n}\nL[L < (max(L)*1.2)] <- NA          # ??\nimage(E_ini,R2,L, col = heat.colors(30), xlab = '??', ylab = '??')  # ??\n\n```\n\nNow, from visual inspection of the graph, you can choose your best fit values for:\n\n- the initial number in the exposed class, and \n\n- the reproduction post-intervention,\n\n### Plot the final fit\n\nThen, we want to plot the observed versus the new predicted data.\n\nFill in the missing bits to be able to run the code below.\n\nTry to understand and comment the code below:\n\n```{r}\n# final \nxstart <- c(S = N-E_ini[i],E = 10,  \nI = 0, R = 0,\nDead = 0, Onset = 0, ReproNb = 1.5)               # ??\n\neventdat <- data.frame(var = \"ReproNb\", time = t.intervention,\nvalue = .9, method = \"rep\")               # ??\n\nout <- as.data.frame(ode(y = xstart, times = times, \nfunc = Dyn.Ebola.Basic2, parms = params,\nevents = list(data = eventdat)))   # ??\n\n# ??\nf <- seq(1,2*t.intervention,by=7)  # ??\ntime <- out$time[f]                # ??\nWeekly.onset <- diff(out$Onset[f])  # ??\nWeekly.death <- diff(out$Dead[f])   # ??\n\n\n# plot\nplot(time[-1], Weekly.onset, col='blue',type='p', ylim = c(0,max(dat$incidence)),\nxlab ='??', ylab = '??')\nlines(time[-1], Weekly.death,type='p',col='red')\n\nlines(dat$date, dat$incidence, type='p',pch=3, col='blue')\n\nlegend('topleft',c('??','??','??'),pch=c(1,3,1),col=c('blue','blue','red'))\n```\n\n# Final model\n\nIn the previous model, the intervention was modelled as a change in the reproduction number.\nOften it is useful to know more specifically what changed, i.e. this is the main advantage in building a 'mechanistic model'.\n\nFor instance, if you know that isolated cases are not transmitting further, then an increase in 'early' isolation may help control the disease.\nA model can help quantify this and gain better intuition.\n\nRetrospectively, if we know that such an intervention was implemented, then we can better understand to which extent it decreased transmission.\n\nFor instance we may know that the time to isolation decreased from **11.5 days** pre-intervention to a lower value, but we are unsure by how much.\n\nSee the code below can you interpret it? \n\nFirst we write a new model:\n\n```{r}\n\nDyn.Ebola.Basic3 <- function (t, state, parameters) {\n\nwith(as.list(c(state,parameters)), # ??\n{\n  N <- S + E + I + R  # ??\n  # ??\n  sigma.h <- 1/delay_hosp                       # ??\n  sigma <- 1/(delay_onset_outcome-delay_hosp)   # ??\n  \n  \n  dS  <-  - S/N * beta * I                # ??\n  dE <- S/N * beta * I - gamma * E        # ??\n  dI <- gamma * E - sigma.h * I           # ??\n  dIh <- sigma.h * I - sigma * Ih         # ??\n  \n  dR <- (1 - p.cfr) * sigma * Ih           # ??\n  \n  dDead <- p.cfr * sigma * Ih              # ??\n  dOnset <- gamma * E                     # ??\n  \n  ddelay_hosp <- 0                           # ??\n  \n  # ??\n  dx <- c(dS, dE, dI, dIh, dR, dDead, dOnset, ddelay_hosp )\n  list(dx)\n}\n)\n}\n```\n\nAs before, try to:\n\n- understand the code and comment it,\n\n- draw a flow diagram,\n\n-write dow the new equations of the system.\n\n### New parameters\n\nThis should be very familiar, but comment on the code to make sure you understand everything.\n\n```{r}\n#==================  Parameters \n\nT.lat\t<- 10    \t            #\t??\ngamma <- 1/T.lat            #\t??\n\nT.outcome <- 12             # ??\nT.hosp.1 <- 11.5            # ??\nT.hosp.2 <- 5                # ??\n\np.cfr\t<-\t0.6\t\t            #\t??\n\nR0 <- 1.5                   #\t??\n\n# ??\nN <- 5e+5                   # ??\nE0 <- 10                     # ??\n\n# ??\nt.intervention = 25*7      # ??\n\n```\n\n### Numerically solve the model\n\nThen as before we run the model.\n\nAgain make sure you understand everything and comment the code.\n\nWhat is being change post-intervention?\n\n```{r}\n#================== Simulation 1\n\nparams <- c(gamma=gamma, delay_hosp = T.hosp.1, delay_onset_outcome = T.outcome,\nbeta = R0/T.outcome,\np.cfr=p.cfr )   # ??\n\n\ntimes  = seq(0, 2 * t.intervention, by=1)          # ??\n# ??\nxstart <- c(S = N-E0,E = E0,  \nI = 0, Ih = 0, R = 0,\nDead = 0, Onset = 0, delay_hosp = T.hosp.1)               # ??\n\n# ??\neventdat <- data.frame(var = \"delay_hosp\", time = t.intervention,\nvalue = T.hosp.2, method = \"rep\")\n\n\nout <- as.data.frame(ode(y = xstart, times = times, \nfunc = Dyn.Ebola.Basic3, parms = params,\nevents = list(data = eventdat)))   # ??\n```\n\n### Plotting results\n\nCheck the results by running the code below.\n\nFill in the comment and complete the graph information\n\n```{r plotSim2}\n# Checking the simulations\nplot(out$time, out$E, col='blue',type='l',ylim = c(0,max(out$E)),\nxlab ='??', ylab = '??')\nlines(out$time, out$I, col='red')\nlines(out$time, out$R, col='green')\n\nlegend('topleft',c('??','??','??'),lwd=2,col=c('blue','red','green'))\n\n# ??\nf <- seq(1,2*t.intervention,by=7)\ntime <- out$time[f]\nWeekly.onset <- diff(out$Onset[f])\nWeekly.death <- diff(out$Dead[f])\n\n\nplot(time[-1], Weekly.onset, col='blue',type='p', ylim = c(0,max(dat$incidence)),\nxlab ='??', ylab = '??')\nlines(time[-1], Weekly.death,type='p',col='red')\n\nlines(dat$date, dat$incidence, type='p',pch=3, col='blue')\n\nlegend('topleft',c('??','??','??'),pch=c(1,3,1),col=c('blue','blue','red'))\n\n```\n\nAs before, try to modify:\n\n- the initial number in the exposed class, and \n\n- the time to hospitalisation post-intervention.\n\nRe-run the model and observe the fit.\n\nYour aim here is to fit the data better, and estimate by how much the time to isolation decreased after the intervention.\n\n### Fitting\n\nAs before, fitting the model manually is not ideal.\n\nTry to run the code below.\nAgain, fill in the missing bits and interpret the code:\n\n```{r}\n###########################################################\n#### get likelihood  ######################################\n###########################################################\n\nE_ini <- seq(20,40,length=10)  # ??\nT2 <- seq(5.5,7.5,length=15) # ??\nL <- matrix(NA,length(E_ini),length(T2)) # ??\n\nfor (i in 1:length(E_ini)){\nfor (j in 1:length(T2)){\nxstart <- c(S = N-E_ini[i],E = E_ini[i],  \nI = 0, Ih = 0, R = 0,\nDead = 0, Onset = 0, delay_hosp = T.hosp.1)               # ??\n\neventdat <- data.frame(var = \"delay_hosp\", time = t.intervention,\nvalue = T2[j], method = \"rep\")     # ??\n\nout <- as.data.frame(ode(y = xstart, times = times, \nfunc = Dyn.Ebola.Basic3, parms = params,\nevents = list(data = eventdat)))   # ??\n\nWeekly.onset <- diff(out$Onset[f]) # ??\n\nL[i,j] <- sum(dpois(x = dat$incidence,lambda = Weekly.onset,log = TRUE))  # ??\n\n}\n}\nL[L < (max(L)*1.5)] <- NA\nimage(E_ini,T2,L, col = heat.colors(30),xlab = '??', ylab='??')\n```\n\nWe obtain best fit measure for the new time to hospitalisation.\n\n### Final fit\n\nNow fill in the code below to be able to run it and observe your new fit.\n\n```{r}\n\n# final \nxstart <- c(S = N-E_ini[i],E = 10,  \nI = 0, Ih = 0, R = 0,\nDead = 0, Onset = 0, delay_hosp = T.hosp.1)               # ??\n\neventdat <- data.frame(var = \"delay_hosp\", time = t.intervention,\nvalue = 5, method = \"rep\")\n\nout <- as.data.frame(ode(y = xstart, times = times, \nfunc = Dyn.Ebola.Basic3, parms = params,\nevents = list(data = eventdat)))   # ??\n\n# weekly incidence and weekly number of death\nf <- seq(1,2*t.intervention,by=7)\ntime <- out$time[f]\nWeekly.onset <- diff(out$Onset[f])\nWeekly.death <- diff(out$Dead[f])\n\n# plot\nplot(time[-1], Weekly.onset, col='blue',type='p', ylim = c(0,max(dat$incidence)),\nxlab ='??', ylab = '??')\nlines(time[-1], Weekly.death,type='p',col='red')\n\nlines(dat$date, dat$incidence, type='p',pch=3, col='blue')\n\nlegend('topleft',c('??','??','??'),pch=c(1,3,1),col=c('blue','blue','red'))\n\n```\n\n### Explore further\n\nyou can explore further:\n\n- try compute the full outbreak size,\n\n- how many live could you save by intervening earlier (perhaps draw graph)?\n\n- what is the influence of T.Hosp.2 on final size? \n\n\n# About this document\n\n## Contributors\n\n- Pierre Nouvellet & Zulma Cucunuba: initial version\n\n\n## Legal stuff\n\n**License**: [CC-BY](https://creativecommons.org/licenses/by/3.0/)\n**Copyright**: Pierre Nouvellet & Zulma Cucunuba, 2017\n\n\n",
    "created" : 1527171655712.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2223909369",
    "id" : "1B306F14",
    "lastKnownWriteTime" : 1527171873,
    "last_content_update" : 1527171873069,
    "path" : "~/GitHub/ebolaproj/ebolaproj/R/Example_ebolaproj.Rmd",
    "project_path" : "R/Example_ebolaproj.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}