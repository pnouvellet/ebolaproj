{
    "collab_server" : "",
    "contents" : "---\ntitle: 'Ebola: Reproduction number and projection'\nauthor: \"Pierre Nouvellet & Anne Cori\"\ndate: '2018-05-24'\n---\n  \n  ```{r options, include = FALSE, message = FALSE, warning = FALSE, error = FALSE}\nlibrary(knitr)\n\nopts_chunk$set(collapse = TRUE)\n\n\n```\n\n\nThis file demonstrate how to use the ebolaproj package.\n\nThe package is used to estimate:\n\n- the reproduction over a fixed time window\n- project incidence forward from this time window\n\nIn doing so, no assumptions are made about the epidemic curve previous to the time window considered. in other words, estimate of Rt and forward projection are not conditionnal on incidence prior to the begining of the time window.\n\nTherefore, in the inference, we infer the initial condition associated with a constant reproduction number that would have let to the incidence observed within the time window.\n\nthe procedure can be applied to multiple locations at the same time. if multiple locations are inputed, the dynamics in each locations are assumed independant.\n\n\n# Simulating data\n\nWe first simulate data to be used for inference.\n\n### Required packages\n\nWe use packages to simulate the data:\n```{r library, eval = TRUE, echo=TRUE}\nlibrary(incidence)\nlibrary(projections)\nlibrary(epitrix)\nlibrary(EpiEstim)\nlibrary(Hmisc)\n```\n\n\n### Simulate incidence\n\n\nWe simulate starting with 20 cases, and serial interval relevant for Ebola.\n\nWe fix the reproduction number at 1.5 and simulate for 150 days and 50 locations.\n\nWe then keep only the last 28 days (4 weeks) of simulation which will be our time window.\n\nFinally, we extract incidence for 10 locations only, making sure the incidence during that period is greater than 0.\n\n```{r simul, eval = TRUE, echo=FALSE}\nI0 <- 5\ndat=rep(1,I0)\n## simulate basic epicurvedat <- c(0, 2, 2, 3, 3, 5, 5, 5, 6, 6, 6, 6)\ni <- incidence::incidence(dat)  # 20 cases to start with\n# plot(i)\n\n# SI\nmean_SI <- 14.2\nCV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_\n# params <- gamma_mucv2shapescale(mean_SI, CV_SI)\n# si <- distcrete(\"gamma\", interval = 1L,\n#                   shape = params$shape,\n#                   scale = params$scale, w = 0.5)\n# si$d(0:30) # problem of first one\nSItrunc <- 40\n# serial distribution\nSI_Distr <- sapply(0:SItrunc, function(e) EpiEstim::DiscrSI(e,mean_SI,mean_SI*CV_SI) )\nSI_Distr <- SI_Distr / sum(SI_Distr)\n\n#simulate 40 days\nR <- 1.5\npred <- projections::project(x = i, R = rep(R,2), R_fix_within = TRUE,\n                si = SI_Distr, n_days = 150, n_sim = 50)\n\n\n# keep incidence of last 20 days\nincidence <- data.frame(date = as.Date('01/05/2018',format='%d/%m/%Y')+seq(0,4*7-1),\n                        I = tail(pred,4*7))\nf <- which(colSums(incidence[,-1])==0) # remove location with 0 cases in last 20 days\nif (length(f)>0) incidence <- incidence[,-(f+1)]\n\nincidence <- incidence[,1:11]\n# I_cum_hist <- colSums(head(pred,150-20))\n\nsave(incidence,R, file = 'simulated.RData')\n```\n\n\n# Infer reproduction number\n\nFirst we load the package and data to test:\n```{r library2, eval = TRUE, echo=TRUE}\nrm(list = as.vector(ls()))\n\n# devtools::load_all('.')\nlibrary(ebolaproj)\n\n# load sample data to check\nload(file = 'simulated.RData')\n\ndim(incidence)\n```\n\nNOTE: incidence dataframe includes:\n\n- 1st column for dates and 10 locations\n- 28 rows: the time window during which we assume Rt is constant\n\n\n\nThen we produce necessary input object for the MCMC:\n```{r initial, eval = TRUE, echo=TRUE}\n# number of locations\nN_geo <- ncol(incidence)-1                                  \n\n# Serial interval \nmean_SI <- 14.2\nCV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_\nSI <- SI_gamma_dist_EpiEstim(mu = mean_SI,\n                            cv = CV_SI, \n                            SItrunc = 40)\n# final number of MCMC iterations (the whole thing, \n# here with 10 locations runs in ~3.5mins) )\nrep <- 2e2                             \nsigma_prop <- rep(0.1,N_geo*2)         # initial proposal variances (they are now tuned!)\n# initial incidence conditions \nif ( N_geo>1 ){\n  mu0 <- colMeans(incidence[,-1])*SI$SItrunc  \n}else{\n  mu0 <- mean(incidence[,-1])*SI$SItrunc  \n}\n# initially, we assume R=1 and choose initial condition accordingly, i.e. with mu0 case and R=1 \n# we expect the number of daily cases to stabilised at the mean of the observed incidence in the \n# time window of interest\n# this is use for the prior of initial number of cases, i.e. as the mean of an exponential distribution\n# in practice, the mu0 cases will happen 100 days before the start of the time windows\n\ntheta0 <- c(rep(1,N_geo), mu0)          # initial parameter R=1 (time # of locations, and initial number of cases in the past)  \n\n```\n\n\n\n```{r test,eval=FALSE,echo=FALSE}\n##########################################################\n# test just me testing the MCMC_iter without tuning\nres1 <- MCMC_iter(incidence = incidence,\n                  N_geo = N_geo,\n                  iter = 1e2,\n                  theta0 = theta0,\n                  s = sigma_prop,\n                  SI = SI,\n                  mu0 = mu0)\n\n##########################################################\n```\n\nWe then run the MCMC:\n\n```{r MCMC, eval=TRUE, echo=TRUE}\n\nres <- MCMC_full(I = incidence,\n                 N_geo = N_geo,\n                 iter = rep,\n                 theta0 = theta0,\n                 s = sigma_prop,\n                 SI = SI,\n                 mu0 = mu0,\n                 repli_adapt = 10,\n                 within_iter = rep/10)\n```\n\n```{r breakdown, echo=FALSE, eval=FALSE}\n##############################################\n# alternative using internal functions\nres0 <- adapt_tuning(repli = 10,\n                     I = incidence,\n                     N_geo = N_geo,\n                     within_iter = rep/10,\n                     theta0 = theta0,\n                     sigma = sigma_prop,\n                     SI = SI,\n                     mu0 = mu0)\n# adaptative tuning bit: we run an MCMC with rep/10 iterations, then\n# adjust the proposal variance to reach 0.2\n# do again using parameter value from the last iteration of the previous MCMC\n# repeat 10 times\n# from experience, this is enough to tunes proposal variances well, but worth checking\n# see below for final acceptance rate output\n# see Rscript/MCMC_Rt_2018.R for full function\n\nprint('halfway!')             # message halfway through (effectively, including tuning, we do 2xrep iterations)\n\nres <- MCMC_iter(incidence = incidence,\n                 N_geo = N_geo,\n                 iter = rep,\n                 theta0 = res0$theta0,\n                 s = res0$sigma,\n                 SI = SI,\n                 mu0 = mu0)\n# run the MCMC to sample posterior of R and initial coniditions at each location\n# FYI: this is called internally by adapt_tuning\n# see Rscript/MCMC_Rt_2018.R for full function\n# needs:\n# I: the incidence for the time window during which we assume Rt to be constant.\n# N_geo: the number of locations\n# iter: the number of iteration for the MCMC\n# theta0: inital parameters, here taken from the last MCMC iteration after tuning (save some burn-in)\n# s: variance of proposal distribution (log-normal)\n# SI: the serial interval(use SI_gamma_dist_EpiEstim to define), or need to be a list with vector dist for the daily distribution and SItrunc: an integer for the threshold of serial interval, if SItrunc=40, then dist is 41 element long to include day 0\n# mu0: initial conidtions to guaranty that if R=1, then we predict the number of cases in the future will stablise at the mean number of cases observed in the time window\n# mu0 is also used as the mean of the (exponential) prior for intial conditions estimated\n#################################################\n```\n\nWe can then check the traces of parameters and likelihood, acceptances, and get quantile for Rt.\n\n```{r check, echo=TRUE, eval=TRUE}\n\nAcc <- colSums(diff(res$theta)!=0)/rep          # acceptance rate (should be close to .2)\nAcc\n# plot traces\nplot(res$logL[,1])                                  # of likelihood\nlayout(matrix(1:N_geo,2,ceiling(N_geo/2),byrow = TRUE))\nfor (i in 1:N_geo) plot(res$theta[,i])              # of R's\nfor (i in 1:N_geo) plot(res$theta[,N_geo+i])        # of initial conditions\n\nif (N_geo>1){\n  R_est <- apply(res$theta[,1:N_geo],2,\n                 quantile,c(.5,.025,.975))   # median and 95%CrI of Rs by locations\n  I0_est <- apply(res$theta[,(N_geo+1):(2*N_geo)],2,\n                  quantile,c(.5,.025,.975))   # median and 95%CrI of I0 \n  \n}else{\n  R_est <- quantile(res$theta[,1],c(.5,.025,.975))\n  I0_est <- quantile(res$theta[,2],c(.5,.025,.975))\n}\nsave.image('test_on_simulation1.RData')             # saving so far\n\n```\n\nWe Check the estimates:\n\n```{r checkest, echo = TRUE, eval = TRUE}\nlayout(matrix(1:2,1,2,byrow = TRUE))\nerrbar(1:N_geo,R_est[1,],R_est[2,],R_est[3,],\n       xlab = 'location', ylab = 'R',ylim = c(0,3), bty = 'n')\nlines(c(1,N_geo),rep(R,2), col = 'red')\n\n\n```\n\n# Project forward\n\nOnce we have inferred the reproduction numbers in the time window, and the initial conditions, we can use the same model to project forward.\n\nWe start the projection from the begining of the time window, to reflect incertainty in the initial conditions.\n\nIf the time window was 4 weeks, and we want to project for 4 weeks after that, then the 'week_forward' needs to be 4+4 in the function 'Sim_Poiss'.\n\n```{r forward, eval=TRUE , echo= TRUE}\n# forward projection\nI_pred <- Proj_Pois(Results = res ,\n                   NR_samples = 10, \n                   Nsim_per_samples = 10,\n                   week_forward = 4+4,\n                   N_geo = N_geo,\n                   SI = SI)\n# function to project forward, see Rscript/useful_functions.R\n# needs the parameters estimated (Results)\n# number of simulations\n# week_forward: number of week projected from the START of the time window, SO: includes the period of time\n# for which we have data!!! e.g. if we have 2 weeks of data and want to project for the 4 weeks \n# after that, week_forward should be 6.\n# require number of locations + serial interval\ntemp <- as.matrix(t(I_pred[,1,101:156]))\nI2 <- build_projections(t(temp), dates = NULL, cumulative = FALSE)\n```\n\nWe finally plot the projections:\n\n```{r plotproj, eval=TRUE, echo = TRUE}\n\n# plot the observed incidence in the time window of interest and the median and 95%CrI predictions\nlayout(matrix(1:N_geo,2,ceiling(N_geo/2),byrow = TRUE))\nfor(i in 1:N_geo){\n  CI_pred <- apply(I_pred[,i,101:dim(I_pred)[3]],2,quantile,c(.5,.025,.975))\n  plot(1:nrow(incidence),incidence[,1+i],\n       xlim=c(0,ncol(CI_pred)), \n       ylim = c(0,1+max(c(incidence[,1+i],as.vector(CI_pred)))),\n       xlab = 'time', ylab = 'incidence')\n  \n  x <- 1:ncol(CI_pred)\n  lines(x,CI_pred[1,],col='blue',lwd=2)\n  polygon(c(x,rev(x)), c(CI_pred[2,],rev(CI_pred[3,])), \n          col = rgb(0,0,1,.2), border = FALSE )\n}\n\n\n```\n\n# About this document\n\n## Contributors\n\n- Pierre Nouvellet & Anne Cori: initial version\n\n\n## Legal stuff\n\n**License**: [CC-BY](https://creativecommons.org/licenses/by/3.0/)\n**Copyright**: Pierre Nouvellet & Anne Cori, 2018\n\n\n",
    "created" : 1527757434126.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "179|40|220|0|\n",
    "hash" : "1785833031",
    "id" : "38A7D791",
    "lastKnownWriteTime" : 1527759072,
    "last_content_update" : 1527759072329,
    "path" : "D:/Work/github/ebolaproj/Example_ebolaproj.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}