recontools::init_package("ebolaproj", check_cran_name = FALSE)
devtools::install_github("reconhub/recontools")
install.packages("git2r")
devtools::install_github("reconhub/recontools")
recontools::init_package("ebolaproj", check_cran_name = FALSE)
library(incidence)
library(projections)
library(epitrix)
library(EpiEstim)
dat=rep(1,5)
## simulate basic epicurvedat <- c(0, 2, 2, 3, 3, 5, 5, 5, 6, 6, 6, 6)
i <- incidence(dat)  # 20 cases to start with
# plot(i)
# SI
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
# params <- gamma_mucv2shapescale(mean_SI, CV_SI)
# si <- distcrete("gamma", interval = 1L,
#                   shape = params$shape,
#                   scale = params$scale, w = 0.5)
# si$d(0:30) # problem of first one
SItrunc <- 40
# serial distribution
SI_Distr <- sapply(0:SItrunc, function(e) DiscrSI(e,mean_SI,mean_SI*CV_SI) )
SI_Distr <- SI_Distr / sum(SI_Distr)
#simulate 40 days
pred <- project(x = i, R = c(1.5,1.5), R_fix_within = TRUE,
si = SI_Distr, n_days = 150, n_sim = 50)
# keep incidence of last 20 days
incidence <- data.frame(date = as.Date('01/05/2018',format='%d/%m/%Y')+seq(0,4*7-1),
I = tail(pred,4*7))
f <- which(colSums(incidence[,-1])==0) # remove location with 0 cases in last 20 days
if (length(f)>0) incidence <- incidence[,-(f+1)]
incidence <- incidence[,1:11]
# I_cum_hist <- colSums(head(pred,150-20))
save(incidence, file = 'simulated.RData')
rm(list = as.vector(ls()))
library(ebolaproj)
# load sample data to check
load(file = 'simulated.RData')
dim(incidence)
N_geo <- ncol(incidence)-1
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
devtools::install_github("reconhub/ebolaproj")
devtools::install_github("pnouvellet/ebolaproj")
devtools::install_github("pnouvellet/ebolaproj/ebolaproj")
library(incidence)
library(projections)
library(epitrix)
library(EpiEstim)
dat=rep(1,5)
## simulate basic epicurvedat <- c(0, 2, 2, 3, 3, 5, 5, 5, 6, 6, 6, 6)
i <- incidence(dat)  # 20 cases to start with
# plot(i)
# SI
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
# params <- gamma_mucv2shapescale(mean_SI, CV_SI)
# si <- distcrete("gamma", interval = 1L,
#                   shape = params$shape,
#                   scale = params$scale, w = 0.5)
# si$d(0:30) # problem of first one
SItrunc <- 40
# serial distribution
SI_Distr <- sapply(0:SItrunc, function(e) DiscrSI(e,mean_SI,mean_SI*CV_SI) )
SI_Distr <- SI_Distr / sum(SI_Distr)
#simulate 40 days
pred <- project(x = i, R = c(1.5,1.5), R_fix_within = TRUE,
si = SI_Distr, n_days = 150, n_sim = 50)
# keep incidence of last 20 days
incidence <- data.frame(date = as.Date('01/05/2018',format='%d/%m/%Y')+seq(0,4*7-1),
I = tail(pred,4*7))
f <- which(colSums(incidence[,-1])==0) # remove location with 0 cases in last 20 days
if (length(f)>0) incidence <- incidence[,-(f+1)]
incidence <- incidence[,1:11]
# I_cum_hist <- colSums(head(pred,150-20))
save(incidence, file = 'simulated.RData')
rm(list = as.vector(ls()))
library(ebolaproj)
# load sample data to check
load(file = 'simulated.RData')
dim(incidence)
N_geo <- ncol(incidence)-1
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
rep <- 5e3
devtools::dev_packages()
devtools::install_github(repo = 'pnouvellet/ebolaproj/ebolaproj)
library(ebolaproj)
# load sample data to check
load(file = 'simulated.RData')
devtools::install_github(repo = 'pnouvellet/ebolaproj/ebolaproj')
setwd('ebolaproj/')
devtools::load_all('.')
setwd('../')
getwd()
setwd('/ebolaproj/')
setwd('ebolaproj/')
devtools::load_all('.')
library(incidence)
library(projections)
library(epitrix)
library(EpiEstim)
library(Hmisc)
I0 <- 5
dat=rep(1,I0)
## simulate basic epicurvedat <- c(0, 2, 2, 3, 3, 5, 5, 5, 6, 6, 6, 6)
i <- incidence(dat)  # 20 cases to start with
# plot(i)
# SI
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
# params <- gamma_mucv2shapescale(mean_SI, CV_SI)
# si <- distcrete("gamma", interval = 1L,
#                   shape = params$shape,
#                   scale = params$scale, w = 0.5)
# si$d(0:30) # problem of first one
SItrunc <- 40
# serial distribution
SI_Distr <- sapply(0:SItrunc, function(e) DiscrSI(e,mean_SI,mean_SI*CV_SI) )
SI_Distr <- SI_Distr / sum(SI_Distr)
#simulate 40 days
R <- 1.5
pred <- project(x = i, R = rep(R,2), R_fix_within = TRUE,
si = SI_Distr, n_days = 150, n_sim = 50)
# keep incidence of last 20 days
incidence <- data.frame(date = as.Date('01/05/2018',format='%d/%m/%Y')+seq(0,4*7-1),
I = tail(pred,4*7))
f <- which(colSums(incidence[,-1])==0) # remove location with 0 cases in last 20 days
if (length(f)>0) incidence <- incidence[,-(f+1)]
incidence <- incidence[,1:11]
# I_cum_hist <- colSums(head(pred,150-20))
save(incidence, file = 'simulated.RData')
I0 <- 5
dat=rep(1,I0)
## simulate basic epicurvedat <- c(0, 2, 2, 3, 3, 5, 5, 5, 6, 6, 6, 6)
i <- incidence(dat)  # 20 cases to start with
# plot(i)
# SI
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
# params <- gamma_mucv2shapescale(mean_SI, CV_SI)
# si <- distcrete("gamma", interval = 1L,
#                   shape = params$shape,
#                   scale = params$scale, w = 0.5)
# si$d(0:30) # problem of first one
SItrunc <- 40
# serial distribution
SI_Distr <- sapply(0:SItrunc, function(e) DiscrSI(e,mean_SI,mean_SI*CV_SI) )
SI_Distr <- SI_Distr / sum(SI_Distr)
#simulate 40 days
R <- 1.5
pred <- project(x = i, R = rep(R,2), R_fix_within = TRUE,
si = SI_Distr, n_days = 150, n_sim = 50)
# keep incidence of last 20 days
incidence <- data.frame(date = as.Date('01/05/2018',format='%d/%m/%Y')+seq(0,4*7-1),
I = tail(pred,4*7))
f <- which(colSums(incidence[,-1])==0) # remove location with 0 cases in last 20 days
if (length(f)>0) incidence <- incidence[,-(f+1)]
incidence <- incidence[,1:11]
# I_cum_hist <- colSums(head(pred,150-20))
save(incidence, file = 'simulated.RData')
library(ebolaproj)
rm(list = as.vector(ls()))
# devtools::load_all('.')
library(ebolaproj)
# load sample data to check
load(file = 'simulated.RData')
dim(incidence)
# number of locations
N_geo <- ncol(incidence)-1
# Serial interval
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
library(ebolaproj)
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
install_github("pnouvellet/ebolaproj/ebolaproj")
devtools::install_github("pnouvellet/ebolaproj/ebolaproj")
devtools::install_github("pnouvellet/ebolaproj/ebolaproj")
devtools::install_github("pnouvellet/ebolaproj/ebolaproj")
devtools::install_github("reconhub/ebolaproj")
devtools::install_github("pnouvellet/ebolaproj/ebolaproj")
library(incidence)
library(projections)
library(epitrix)
library(EpiEstim)
library(Hmisc)
I0 <- 5
dat=rep(1,I0)
## simulate basic epicurvedat <- c(0, 2, 2, 3, 3, 5, 5, 5, 6, 6, 6, 6)
i <- incidence(dat)  # 20 cases to start with
# plot(i)
# SI
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
# params <- gamma_mucv2shapescale(mean_SI, CV_SI)
# si <- distcrete("gamma", interval = 1L,
#                   shape = params$shape,
#                   scale = params$scale, w = 0.5)
# si$d(0:30) # problem of first one
SItrunc <- 40
# serial distribution
SI_Distr <- sapply(0:SItrunc, function(e) DiscrSI(e,mean_SI,mean_SI*CV_SI) )
SI_Distr <- SI_Distr / sum(SI_Distr)
#simulate 40 days
R <- 1.5
pred <- project(x = i, R = rep(R,2), R_fix_within = TRUE,
si = SI_Distr, n_days = 150, n_sim = 50)
# keep incidence of last 20 days
incidence <- data.frame(date = as.Date('01/05/2018',format='%d/%m/%Y')+seq(0,4*7-1),
I = tail(pred,4*7))
f <- which(colSums(incidence[,-1])==0) # remove location with 0 cases in last 20 days
if (length(f)>0) incidence <- incidence[,-(f+1)]
incidence <- incidence[,1:11]
# I_cum_hist <- colSums(head(pred,150-20))
save(incidence, file = 'simulated.RData')
rm(list = as.vector(ls()))
# devtools::load_all('.')
library(ebolaproj)
# load sample data to check
load(file = 'simulated.RData')
dim(incidence)
# number of locations
N_geo <- ncol(incidence)-1
# Serial interval
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
