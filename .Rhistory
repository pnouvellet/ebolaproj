recontools::init_package("ebolaproj", check_cran_name = FALSE)
devtools::install_github("reconhub/recontools")
install.packages("git2r")
devtools::install_github("reconhub/recontools")
recontools::init_package("ebolaproj", check_cran_name = FALSE)
library(incidence)
library(projections)
library(epitrix)
library(EpiEstim)
dat=rep(1,5)
## simulate basic epicurvedat <- c(0, 2, 2, 3, 3, 5, 5, 5, 6, 6, 6, 6)
i <- incidence(dat)  # 20 cases to start with
# plot(i)
# SI
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
# params <- gamma_mucv2shapescale(mean_SI, CV_SI)
# si <- distcrete("gamma", interval = 1L,
#                   shape = params$shape,
#                   scale = params$scale, w = 0.5)
# si$d(0:30) # problem of first one
SItrunc <- 40
# serial distribution
SI_Distr <- sapply(0:SItrunc, function(e) DiscrSI(e,mean_SI,mean_SI*CV_SI) )
SI_Distr <- SI_Distr / sum(SI_Distr)
#simulate 40 days
pred <- project(x = i, R = c(1.5,1.5), R_fix_within = TRUE,
si = SI_Distr, n_days = 150, n_sim = 50)
# keep incidence of last 20 days
incidence <- data.frame(date = as.Date('01/05/2018',format='%d/%m/%Y')+seq(0,4*7-1),
I = tail(pred,4*7))
f <- which(colSums(incidence[,-1])==0) # remove location with 0 cases in last 20 days
if (length(f)>0) incidence <- incidence[,-(f+1)]
incidence <- incidence[,1:11]
# I_cum_hist <- colSums(head(pred,150-20))
save(incidence, file = 'simulated.RData')
rm(list = as.vector(ls()))
library(ebolaproj)
# load sample data to check
load(file = 'simulated.RData')
dim(incidence)
N_geo <- ncol(incidence)-1
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
devtools::install_github("reconhub/ebolaproj")
devtools::install_github("pnouvellet/ebolaproj")
devtools::install_github("pnouvellet/ebolaproj/ebolaproj")
library(incidence)
library(projections)
library(epitrix)
library(EpiEstim)
dat=rep(1,5)
## simulate basic epicurvedat <- c(0, 2, 2, 3, 3, 5, 5, 5, 6, 6, 6, 6)
i <- incidence(dat)  # 20 cases to start with
# plot(i)
# SI
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
# params <- gamma_mucv2shapescale(mean_SI, CV_SI)
# si <- distcrete("gamma", interval = 1L,
#                   shape = params$shape,
#                   scale = params$scale, w = 0.5)
# si$d(0:30) # problem of first one
SItrunc <- 40
# serial distribution
SI_Distr <- sapply(0:SItrunc, function(e) DiscrSI(e,mean_SI,mean_SI*CV_SI) )
SI_Distr <- SI_Distr / sum(SI_Distr)
#simulate 40 days
pred <- project(x = i, R = c(1.5,1.5), R_fix_within = TRUE,
si = SI_Distr, n_days = 150, n_sim = 50)
# keep incidence of last 20 days
incidence <- data.frame(date = as.Date('01/05/2018',format='%d/%m/%Y')+seq(0,4*7-1),
I = tail(pred,4*7))
f <- which(colSums(incidence[,-1])==0) # remove location with 0 cases in last 20 days
if (length(f)>0) incidence <- incidence[,-(f+1)]
incidence <- incidence[,1:11]
# I_cum_hist <- colSums(head(pred,150-20))
save(incidence, file = 'simulated.RData')
rm(list = as.vector(ls()))
library(ebolaproj)
# load sample data to check
load(file = 'simulated.RData')
dim(incidence)
N_geo <- ncol(incidence)-1
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
rep <- 5e3
devtools::dev_packages()
devtools::install_github(repo = 'pnouvellet/ebolaproj/ebolaproj)
library(ebolaproj)
# load sample data to check
load(file = 'simulated.RData')
devtools::install_github(repo = 'pnouvellet/ebolaproj/ebolaproj')
setwd('ebolaproj/')
devtools::load_all('.')
setwd('../')
getwd()
setwd('/ebolaproj/')
setwd('ebolaproj/')
devtools::load_all('.')
library(incidence)
library(projections)
library(epitrix)
library(EpiEstim)
library(Hmisc)
I0 <- 5
dat=rep(1,I0)
## simulate basic epicurvedat <- c(0, 2, 2, 3, 3, 5, 5, 5, 6, 6, 6, 6)
i <- incidence(dat)  # 20 cases to start with
# plot(i)
# SI
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
# params <- gamma_mucv2shapescale(mean_SI, CV_SI)
# si <- distcrete("gamma", interval = 1L,
#                   shape = params$shape,
#                   scale = params$scale, w = 0.5)
# si$d(0:30) # problem of first one
SItrunc <- 40
# serial distribution
SI_Distr <- sapply(0:SItrunc, function(e) DiscrSI(e,mean_SI,mean_SI*CV_SI) )
SI_Distr <- SI_Distr / sum(SI_Distr)
#simulate 40 days
R <- 1.5
pred <- project(x = i, R = rep(R,2), R_fix_within = TRUE,
si = SI_Distr, n_days = 150, n_sim = 50)
# keep incidence of last 20 days
incidence <- data.frame(date = as.Date('01/05/2018',format='%d/%m/%Y')+seq(0,4*7-1),
I = tail(pred,4*7))
f <- which(colSums(incidence[,-1])==0) # remove location with 0 cases in last 20 days
if (length(f)>0) incidence <- incidence[,-(f+1)]
incidence <- incidence[,1:11]
# I_cum_hist <- colSums(head(pred,150-20))
save(incidence, file = 'simulated.RData')
I0 <- 5
dat=rep(1,I0)
## simulate basic epicurvedat <- c(0, 2, 2, 3, 3, 5, 5, 5, 6, 6, 6, 6)
i <- incidence(dat)  # 20 cases to start with
# plot(i)
# SI
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
# params <- gamma_mucv2shapescale(mean_SI, CV_SI)
# si <- distcrete("gamma", interval = 1L,
#                   shape = params$shape,
#                   scale = params$scale, w = 0.5)
# si$d(0:30) # problem of first one
SItrunc <- 40
# serial distribution
SI_Distr <- sapply(0:SItrunc, function(e) DiscrSI(e,mean_SI,mean_SI*CV_SI) )
SI_Distr <- SI_Distr / sum(SI_Distr)
#simulate 40 days
R <- 1.5
pred <- project(x = i, R = rep(R,2), R_fix_within = TRUE,
si = SI_Distr, n_days = 150, n_sim = 50)
# keep incidence of last 20 days
incidence <- data.frame(date = as.Date('01/05/2018',format='%d/%m/%Y')+seq(0,4*7-1),
I = tail(pred,4*7))
f <- which(colSums(incidence[,-1])==0) # remove location with 0 cases in last 20 days
if (length(f)>0) incidence <- incidence[,-(f+1)]
incidence <- incidence[,1:11]
# I_cum_hist <- colSums(head(pred,150-20))
save(incidence, file = 'simulated.RData')
library(ebolaproj)
rm(list = as.vector(ls()))
# devtools::load_all('.')
library(ebolaproj)
# load sample data to check
load(file = 'simulated.RData')
dim(incidence)
# number of locations
N_geo <- ncol(incidence)-1
# Serial interval
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
library(ebolaproj)
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
install_github("pnouvellet/ebolaproj/ebolaproj")
devtools::install_github("pnouvellet/ebolaproj/ebolaproj")
devtools::install_github("pnouvellet/ebolaproj/ebolaproj")
devtools::install_github("pnouvellet/ebolaproj/ebolaproj")
devtools::install_github("reconhub/ebolaproj")
devtools::install_github("pnouvellet/ebolaproj/ebolaproj")
library(incidence)
library(projections)
library(epitrix)
library(EpiEstim)
library(Hmisc)
I0 <- 5
dat=rep(1,I0)
## simulate basic epicurvedat <- c(0, 2, 2, 3, 3, 5, 5, 5, 6, 6, 6, 6)
i <- incidence(dat)  # 20 cases to start with
# plot(i)
# SI
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
# params <- gamma_mucv2shapescale(mean_SI, CV_SI)
# si <- distcrete("gamma", interval = 1L,
#                   shape = params$shape,
#                   scale = params$scale, w = 0.5)
# si$d(0:30) # problem of first one
SItrunc <- 40
# serial distribution
SI_Distr <- sapply(0:SItrunc, function(e) DiscrSI(e,mean_SI,mean_SI*CV_SI) )
SI_Distr <- SI_Distr / sum(SI_Distr)
#simulate 40 days
R <- 1.5
pred <- project(x = i, R = rep(R,2), R_fix_within = TRUE,
si = SI_Distr, n_days = 150, n_sim = 50)
# keep incidence of last 20 days
incidence <- data.frame(date = as.Date('01/05/2018',format='%d/%m/%Y')+seq(0,4*7-1),
I = tail(pred,4*7))
f <- which(colSums(incidence[,-1])==0) # remove location with 0 cases in last 20 days
if (length(f)>0) incidence <- incidence[,-(f+1)]
incidence <- incidence[,1:11]
# I_cum_hist <- colSums(head(pred,150-20))
save(incidence, file = 'simulated.RData')
rm(list = as.vector(ls()))
# devtools::load_all('.')
library(ebolaproj)
# load sample data to check
load(file = 'simulated.RData')
dim(incidence)
# number of locations
N_geo <- ncol(incidence)-1
# Serial interval
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
devtools::install_github("pnouvellet/ebolaproj/ebolaproj")
library(ebolaproj)
library(ebolaproj)
devtools::install_github("pnouvellet/ebolaproj/ebolaproj")
library(ebolaproj)
devtools::install_github("pnouvellet/ebolaproj/ebolaproj")
library(ebolaproj)
SI_gamma_dist_EpiEstim(2,3,5)
devtools::install_github("pnouvellet/ebolaproj/ebolaproj")
library(ebolaproj)
SI_gamma_dist_EpiEstim(2,3,5)
SI_gamma_dist_EpiEstim(mu = 2,cv = 3,SItrunc = 5)
devtools::install_github("pnouvellet/ebolaproj/ebolaproj")
library(ebolaproj)
SI_gamma_dist_EpiEstim(2,3,5)
I0 <- 5
dat=rep(1,I0)
i <- incidence(dat)  # 20 cases to start with
i <- incidence::incidence(dat)  # 20 cases to start with
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SItrunc <- 40
SI_Distr <- sapply(0:SItrunc, function(e) EpiEstim::DiscrSI(e,mean_SI,mean_SI*CV_SI) )
SI_Distr <- SI_Distr / sum(SI_Distr)
R <- 1.5
pred <- project(x = i, R = rep(R,2), R_fix_within = TRUE,
si = SI_Distr, n_days = 150, n_sim = 50)
pred <- projection::project(x = i, R = rep(R,2), R_fix_within = TRUE,
si = SI_Distr, n_days = 150, n_sim = 50)
pred <- projections::project(x = i, R = rep(R,2), R_fix_within = TRUE,
si = SI_Distr, n_days = 150, n_sim = 50)
incidence <- data.frame(date = as.Date('01/05/2018',format='%d/%m/%Y')+seq(0,4*7-1),
I = tail(pred,4*7))
incidence(dat)
I0 <- 5
dat=rep(1,I0)
## simulate basic epicurvedat <- c(0, 2, 2, 3, 3, 5, 5, 5, 6, 6, 6, 6)
i <- incidence::incidence(dat)  # 20 cases to start with
# plot(i)
# SI
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
# params <- gamma_mucv2shapescale(mean_SI, CV_SI)
# si <- distcrete("gamma", interval = 1L,
#                   shape = params$shape,
#                   scale = params$scale, w = 0.5)
# si$d(0:30) # problem of first one
SItrunc <- 40
# serial distribution
SI_Distr <- sapply(0:SItrunc, function(e) EpiEstim::DiscrSI(e,mean_SI,mean_SI*CV_SI) )
SI_Distr <- SI_Distr / sum(SI_Distr)
#simulate 40 days
R <- 1.5
pred <- projections::project(x = i, R = rep(R,2), R_fix_within = TRUE,
si = SI_Distr, n_days = 150, n_sim = 50)
# keep incidence of last 20 days
incidence <- data.frame(date = as.Date('01/05/2018',format='%d/%m/%Y')+seq(0,4*7-1),
I = tail(pred,4*7))
f <- which(colSums(incidence[,-1])==0) # remove location with 0 cases in last 20 days
if (length(f)>0) incidence <- incidence[,-(f+1)]
incidence <- incidence[,1:11]
# I_cum_hist <- colSums(head(pred,150-20))
save(incidence, file = 'simulated.RData')
rm(list = as.vector(ls()))
library(ebolaproj)
load(file = 'simulated.RData')
dim(incidence)
N_geo <- ncol(incidence)-1
mean_SI <- 14.2
CV_SI <- 9.6/14.2 # from http://www.nejm.org/doi/suppl/10.1056/NEJMc1414992/suppl_file/nejmc1414992_
SI <- SI_gamma_dist_EpiEstim(mu = mean_SI,
cv = CV_SI,
SItrunc = 40)
rep <- 2e3
sigma_prop <- rep(0.1,N_geo*2)         # initial proposal variances (they are now tuned!)
if ( N_geo>1 ){
mu0 <- colMeans(incidence[,-1])*SI$SItrunc
}else{
mu0 <- mean(incidence[,-1])*SI$SItrunc
}
theta0 <- c(rep(1,N_geo), mu0)          # initial parameter R=1 (time # of locations, and initial number of cases in the past)
res1 <- MCMC_iter(I = incidence,
N_geo = N_geo,
iter = 1e2,
theta0 = theta0,
s = sigma_prop,
SI = SI,
mu0 = mu0)
res1 <- MCMC_iter(incidence = I,
N_geo = N_geo,
iter = 1e2,
theta0 = theta0,
s = sigma_prop,
SI = SI,
mu0 = mu0)
res1 <- MCMC_iter(incidence = incidence,
N_geo = N_geo,
iter = 1e2,
theta0 = theta0,
s = sigma_prop,
SI = SI,
mu0 = mu0)
res <- MCMC_full(I = incidence,
N_geo = N_geo,
iter = rep,
theta0 = theta0,
s = sigma_prop,
SI = SI,
mu0 = mu0,
repli_adapt = 10,
within_iter = rep/10)
res0 <- adapt_tuning(repli = 10,
I = incidence,
N_geo = N_geo,
within_iter = rep/10,
theta0 = theta0,
sigma = sigma_prop,
SI = SI,
mu0 = mu0)
res <- MCMC_iter(incidence = incidence,
N_geo = N_geo,
iter = rep,
theta0 = res0$theta0,
s = res0$sigma,
SI = SI,
mu0 = mu0)
R0=c(1,2,3,4)
rep(R0,each=3)
matrix(1:10,5,2)
a=matrix(1:10,5,2)
b=a[c(1,3,5),2]
b=a[c(1,3,5),]
b
rep(b,each=3)
matrix(rep(b,each=3),2,3*3)
matrix(rep(b,each=3),3*3,2)
